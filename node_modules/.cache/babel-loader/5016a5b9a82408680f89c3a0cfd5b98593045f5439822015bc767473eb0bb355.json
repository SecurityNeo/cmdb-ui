{"ast":null,"code":"import { getCurrentInstance } from 'vue';\nexport default {\n  setup() {\n    // const {proxy} = getCurrentInstance()\n\n    // const userlist = async()=> {\n    // try {\n    //     const rest = await new proxy.$request(proxy.$urls.m().userlist).modeget()\n\n    //     if (rest.data.code !== 200 ) {\n    //         new proxy.$tips(\"获取用户列表失败\", \"warning\").notify()\n    //     }\n    //     console.log(rest.data); \n    // } catch (e) {\n    //     new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify()\n    //     }\n    // }\n\n    const userlist = [{\n      id: 1,\n      username: \"admin\",\n      name_alias: \"系统管理员\",\n      phone: 18200357505,\n      mail: \"\",\n      role: \"admin\",\n      CreatedAt: \"2023-11-14T22:23:48+08:00\",\n      UpdatedAt: \"0001-01-01T00:00:00Z\"\n    }, {\n      id: 2,\n      username: \"lihu\",\n      name_alias: \"李虎\",\n      phone: \"\",\n      mail: \"\",\n      role: \"\",\n      CreatedAt: \"2023-11-14T22:28:11+08:00\",\n      UpdatedAt: \"2023-11-14T22:28:11+08:00\"\n    }];\n    const cellStyle = (row, colum, rowIndex, columIndex) => {\n      if (row.mail === null || row.mail === \"\") {\n        row.mail = '--';\n      }\n    };\n    return {\n      userlist,\n      cellStyle\n    };\n  }\n};","map":{"version":3,"names":["getCurrentInstance","setup","userlist","id","username","name_alias","phone","mail","role","CreatedAt","UpdatedAt","cellStyle","row","colum","rowIndex","columIndex"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\system\\user.vue"],"sourcesContent":["<template>\r\n    <div class=\"oderding\">\r\n        <div class=\"heading\">\r\n            <div>用户管理</div>\r\n            <div class=\"table-head\">\r\n                <el-button type=\"primary\" size=\"small\" >新建用户</el-button>\r\n            </div>\r\n            <div>\r\n                <el-table :data=\"userlist\" stripe border :cell-style=\"cellStyle\"  height=\"250\" style=\"width: 100%\" class=\"cell\">\r\n                    <el-table-column prop=\"username\" label=\"用户名\"  />\r\n                    <el-table-column prop=\"phone\" label=\"电话\" />\r\n                    <el-table-column prop=\"mail\" label=\"邮箱\" />\r\n                    <el-table-column prop=\"role\" label=\"角色\" />\r\n                    <el-table-column prop=\"CreatedAt\" label=\"创建时间\" />\r\n                    <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\r\n                        <template #default>\r\n                            <el-button link type=\"primary\" size=\"small\" @click=\"handleClick\">编辑</el-button>\r\n                            <el-button link type=\"primary\" size=\"small\">删除</el-button>\r\n                        </template>\r\n                    </el-table-column>   \r\n                </el-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { getCurrentInstance } from 'vue'\r\n\r\nexport default {\r\n\r\n    setup() {\r\n        // const {proxy} = getCurrentInstance()\r\n\r\n        // const userlist = async()=> {\r\n        // try {\r\n        //     const rest = await new proxy.$request(proxy.$urls.m().userlist).modeget()\r\n\r\n        //     if (rest.data.code !== 200 ) {\r\n        //         new proxy.$tips(\"获取用户列表失败\", \"warning\").notify()\r\n        //     }\r\n        //     console.log(rest.data); \r\n        // } catch (e) {\r\n        //     new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify()\r\n        //     }\r\n        // }\r\n        \r\n        const userlist = [\r\n            {\r\n                id: 1,\r\n                username: \"admin\",\r\n                name_alias: \"系统管理员\",\r\n                phone: 18200357505,\r\n                mail: \"\",\r\n                role: \"admin\",\r\n                CreatedAt: \"2023-11-14T22:23:48+08:00\",\r\n                UpdatedAt: \"0001-01-01T00:00:00Z\"\r\n            },\r\n            {\r\n                id: 2,\r\n                username: \"lihu\",\r\n                name_alias: \"李虎\",\r\n                phone: \"\",\r\n                mail: \"\",\r\n                role: \"\",\r\n                CreatedAt: \"2023-11-14T22:28:11+08:00\",\r\n                UpdatedAt: \"2023-11-14T22:28:11+08:00\"\r\n            }\r\n        ]\r\n        \r\n        const cellStyle = (row, colum, rowIndex, columIndex) => {\r\n            if (row.mail === null ||row.mail === \"\" ) {\r\n                row.mail = '--'\r\n            }\r\n        }\r\n        \r\n        return {userlist, cellStyle}\r\n    }\r\n}\r\n</script>"],"mappings":"AA4BA,SAASA,kBAAiB,QAAS,KAAI;AAEvC,eAAe;EAEXC,KAAKA,CAAA,EAAG;IACJ;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMC,QAAO,GAAI,CACb;MACIC,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,OAAO;MACjBC,UAAU,EAAE,OAAO;MACnBC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,OAAO;MACbC,SAAS,EAAE,2BAA2B;MACtCC,SAAS,EAAE;IACf,CAAC,EACD;MACIP,EAAE,EAAE,CAAC;MACLC,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,SAAS,EAAE,2BAA2B;MACtCC,SAAS,EAAE;IACf,EACJ;IAEA,MAAMC,SAAQ,GAAIA,CAACC,GAAG,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,KAAK;MACpD,IAAIH,GAAG,CAACL,IAAG,KAAM,IAAG,IAAIK,GAAG,CAACL,IAAG,KAAM,EAAC,EAAI;QACtCK,GAAG,CAACL,IAAG,GAAI,IAAG;MAClB;IACJ;IAEA,OAAO;MAACL,QAAQ;MAAES;IAAS;EAC/B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}