{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"width\": \"500px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_block_title\"\n}, \"网络设备基础信息\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  style: {\n    \"width\": \"500px\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_block_title\"\n}, \"网络及账号配置\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"input-float\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 管理地址 \", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  class: \"input_value\"\n};\nconst _hoisted_9 = {\n  class: \"input-float\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 管理用户名 \", -1 /* HOISTED */);\nconst _hoisted_11 = {\n  class: \"input_value\"\n};\nconst _hoisted_12 = {\n  class: \"input-float\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 管理用户密码 \", -1 /* HOISTED */);\nconst _hoisted_14 = {\n  class: \"input_value\"\n};\nconst _hoisted_15 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_block_title\"\n}, \"公共属性\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  class: \"input-float\"\n};\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 责任人 \", -1 /* HOISTED */);\nconst _hoisted_19 = {\n  style: {\n    \"float\": \"left\"\n  }\n};\nconst _hoisted_20 = {\n  style: {\n    \"float\": \"right\",\n    \"color\": \"var(--el-text-color-secondary)\",\n    \"font-size\": \"13px\"\n  }\n};\nconst _hoisted_21 = {\n  class: \"input-float\"\n};\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 资源标签 \", -1 /* HOISTED */);\nconst _hoisted_23 = {\n  class: \"input-float\"\n};\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 位置 \", -1 /* HOISTED */);\nconst _hoisted_25 = {\n  class: \"input_value\"\n};\nconst _hoisted_26 = {\n  class: \"input-float\"\n};\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 备注信息 \", -1 /* HOISTED */);\nconst _hoisted_28 = {\n  class: \"input_value\"\n};\nconst _hoisted_29 = {\n  style: {\n    \"float\": \"right\",\n    \"margin-bottom\": \"40px\",\n    \"margin-right\": \"72px\",\n    \"margin-top\": \"20px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_dialog, {\n    modelValue: $setup.config.centerDialogVisible,\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $setup.config.centerDialogVisible = $event),\n    title: \"新建网络设备\",\n    width: \"60%\",\n    \"align-center\": \"\",\n    \"close-on-click-modal\": false\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_form, {\n      ref: \"addNetworksRef\",\n      model: $setup.networks,\n      rules: _ctx.rules,\n      \"label-width\": \"120px\",\n      \"status-icon\": \"\"\n    }, null, 8 /* PROPS */, [\"model\", \"rules\"]), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 基础信息 \"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", null, [_createVNode(_component_el_form_item, {\n      label: \"主机名\",\n      prop: \"host_name\",\n      \"label-position\": _ctx.right,\n      style: {\n        \"margin-left\": \"40px\",\n        \"width\": \"460px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.networks.host_name,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.networks.host_name = $event),\n        clearable: \"\",\n        style: {\n          \"width\": \"300px\"\n        },\n        placeholder: \"请输入主机名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label-position\"]), _createVNode(_component_el_form_item, {\n      label: \"厂商\",\n      prop: \"vendor\",\n      style: {\n        \"margin-left\": \"40px\",\n        \"width\": \"460px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.networks.vendor,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.networks.vendor = $event),\n        clearable: \"\",\n        style: {\n          \"width\": \"300px\"\n        },\n        placeholder: \"请输入厂商名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"型号\",\n      prop: \"product_name\",\n      style: {\n        \"margin-left\": \"40px\",\n        \"width\": \"460px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.networks.product_name,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.networks.product_name = $event),\n        clearable: \"\",\n        style: {\n          \"width\": \"300px\"\n        },\n        placeholder: \"请输入设备型号\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"序列号\",\n      prop: \"sn\",\n      style: {\n        \"margin-left\": \"40px\",\n        \"width\": \"460px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.networks.sn,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.networks.sn = $event),\n        clearable: \"\",\n        style: {\n          \"width\": \"300px\"\n        },\n        placeholder: \"请输入设备序列号\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"资产编号\",\n      prop: \"asset_number\",\n      style: {\n        \"margin-left\": \"40px\",\n        \"width\": \"460px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.networks.asset_number,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.networks.asset_number = $event),\n        clearable: \"\",\n        style: {\n          \"width\": \"300px\"\n        },\n        placeholder: \"请输入设备资产编号\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    })])]), _createCommentVNode(\" 网络及账号配置 \"), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_input, {\n      modelValue: _ctx.mgt_ip,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.mgt_ip = $event),\n      clearable: \"\",\n      class: \"inputflex\",\n      placeholder: \"请输设备管理IP地址\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", _hoisted_11, [_createVNode(_component_el_input, {\n      modelValue: _ctx.mgt_user_name,\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.mgt_user_name = $event),\n      clearable: \"\",\n      class: \"inputflex\",\n      placeholder: \"请输入设备管理用户名\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])])]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"div\", _hoisted_14, [_createVNode(_component_el_input, {\n      modelValue: _ctx.mgt_pwd,\n      \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.mgt_pwd = $event),\n      clearable: \"\",\n      class: \"inputflex\",\n      type: \"password\",\n      \"show-password\": \"\",\n      placeholder: \"请输入设备管理用户密码\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])])])])]), _createElementVNode(\"div\", _hoisted_15, [_createCommentVNode(\" 公共属性配置 \"), _createElementVNode(\"div\", null, [_hoisted_16, _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _createElementVNode(\"div\", null, [_createVNode(_component_el_select, {\n      modelValue: $setup.selectUserId,\n      \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $setup.selectUserId = $event),\n      \"value-key\": \"id\",\n      placeholder: \"请选择责任人\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.user.user_arr, item => {\n        return _openBlock(), _createBlock(_component_el_option, {\n          key: item.id,\n          label: item.name_alias,\n          value: item.id\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_19, _toDisplayString(item.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_20, _toDisplayString(item.name_alias), 1 /* TEXT */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\", \"value\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_21, [_hoisted_22, _createElementVNode(\"div\", null, [_createVNode(_component_el_select, {\n      modelValue: $setup.selectTagId,\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $setup.selectTagId = $event),\n      \"value-key\": \"id\",\n      placeholder: \"请选择资源标签\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tag.tag_arr, item => {\n        return _openBlock(), _createBlock(_component_el_option, {\n          key: item.id,\n          label: item.name,\n          value: item.id\n        }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_23, [_hoisted_24, _createElementVNode(\"div\", _hoisted_25, [_createVNode(_component_el_input, {\n      modelValue: _ctx.location,\n      \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => _ctx.location = $event),\n      autosize: \"\",\n      type: \"textarea\",\n      clearable: \"\",\n      class: \"inputflex\",\n      placeholder: \"请输设备所在机柜位置\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_26, [_hoisted_27, _createElementVNode(\"div\", _hoisted_28, [_createVNode(_component_el_input, {\n      modelValue: _ctx.description,\n      \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => _ctx.description = $event),\n      autosize: \"\",\n      type: \"textarea\",\n      clearable: \"\",\n      class: \"inputflex\",\n      placeholder: \"请输入设备备注信息\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])])])])])]), _createCommentVNode(\" 表格下方功能按钮 \"), _createElementVNode(\"div\", _hoisted_29, [_createVNode(_component_el_button, {\n      onClick: _cache[12] || (_cache[12] = $event => $setup.config.centerDialogVisible = false)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      loading: $setup.config.isLoading,\n      onClick: $setup.addNetworks\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"确认\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\", \"onClick\"])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["style","_createElementVNode","class","_createElementBlock","_createVNode","_component_el_dialog","$setup","config","centerDialogVisible","$event","title","width","_component_el_form","ref","model","networks","rules","_ctx","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_component_el_form_item","label","prop","right","_component_el_input","host_name","clearable","placeholder","vendor","product_name","sn","asset_number","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","mgt_ip","_hoisted_9","_hoisted_10","_hoisted_11","mgt_user_name","_hoisted_12","_hoisted_13","_hoisted_14","mgt_pwd","type","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_component_el_select","selectUserId","_Fragment","_renderList","user","user_arr","item","_createBlock","_component_el_option","key","id","name_alias","value","_hoisted_19","_toDisplayString","username","_hoisted_20","_hoisted_21","_hoisted_22","selectTagId","tag","tag_arr","name","_hoisted_23","_hoisted_24","_hoisted_25","location","autosize","_hoisted_26","_hoisted_27","_hoisted_28","description","_hoisted_29","_component_el_button","onClick","_cache","loading","isLoading","addNetworks"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\resource\\networks\\components\\addnetworks-dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n            v-model=\"config.centerDialogVisible\"\r\n            title=\"新建网络设备\"\r\n            width=\"60%\"\r\n            align-center\r\n            :close-on-click-modal=\"false\"           \r\n        >\r\n\r\n            <div >\r\n                <el-form\r\n                    ref=\"addNetworksRef\"\r\n                    :model=\"networks\"\r\n                    :rules=\"rules\"\r\n                    label-width=\"120px\"\r\n                    status-icon\r\n                >\r\n                </el-form>\r\n                <div style=\"display: flex\" >\r\n                    <!-- 基础信息 -->\r\n                    <div style=\"width: 500px;\">\r\n                        <div class=\"input_block_title\" >网络设备基础信息</div>\r\n\r\n                        <div>\r\n                            <el-form-item label=\"主机名\" prop=\"host_name\" :label-position=\"right\" style=\"margin-left: 40px;width: 460px;\" >\r\n                                <el-input v-model=\"networks.host_name\" clearable style=\"width: 300px;\"  placeholder=\"请输入主机名\"  />\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"厂商\" prop=\"vendor\" style=\"margin-left: 40px;width: 460px;\" >\r\n                                <el-input v-model=\"networks.vendor\" clearable style=\"width: 300px;\"  placeholder=\"请输入厂商名\"  />\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"型号\" prop=\"product_name\"  style=\"margin-left: 40px;width: 460px;\">\r\n                                <el-input v-model=\"networks.product_name\" clearable style=\"width: 300px;\"  placeholder=\"请输入设备型号\"  />\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"序列号\" prop=\"sn\" style=\"margin-left: 40px;width: 460px;\">\r\n                                <el-input v-model=\"networks.sn\" clearable style=\"width: 300px;\"  placeholder=\"请输入设备序列号\"  />\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"资产编号\" prop=\"asset_number\" style=\"margin-left: 40px;width: 460px;\">\r\n                                <el-input v-model=\"networks.asset_number\" clearable style=\"width: 300px;\"  placeholder=\"请输入设备资产编号\"  />\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- 网络及账号配置 -->\r\n                    <div style=\"width: 500px;\">\r\n                        <div class=\"input_block_title\">网络及账号配置</div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                管理地址\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"mgt_ip\" clearable class=\"inputflex\"  placeholder=\"请输设备管理IP地址\"  />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                管理用户名\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"mgt_user_name\" clearable class=\"inputflex\"  placeholder=\"请输入设备管理用户名\"  />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                管理用户密码\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"mgt_pwd\" clearable class=\"inputflex\"  type=\"password\" show-password placeholder=\"请输入设备管理用户密码\"  />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style=\"display: flex;\">\r\n\r\n                    <!-- 公共属性配置 -->\r\n                    <div>\r\n                        <div class=\"input_block_title\">公共属性</div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    责任人\r\n                                </div>\r\n                                <div>\r\n                                    <el-select v-model=\"selectUserId\" value-key=\"id\" placeholder=\"请选择责任人\">\r\n                                        <el-option\r\n                                            v-for=\"item in user.user_arr\"\r\n                                            :key=\"item.id\"\r\n                                            :label=\"item.name_alias\"\r\n                                            :value=\"item.id\"\r\n                                            >\r\n\r\n                                            <span style=\"float: left\">{{ item.username }}</span>\r\n                                            <span\r\n                                                style=\"float: right;color: var(--el-text-color-secondary);font-size: 13px;\"\r\n                                                >{{ item.name_alias }}</span>\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    资源标签\r\n                                </div>\r\n                                <div>\r\n                                    <el-select v-model=\"selectTagId\" value-key=\"id\" placeholder=\"请选择资源标签\">\r\n                                        <el-option\r\n                                            v-for=\"item in tag.tag_arr\"\r\n                                            :key=\"item.id\"\r\n                                            :label=\"item.name\"\r\n                                            :value=\"item.id\"\r\n                                            />\r\n                                    </el-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    位置\r\n                                </div>\r\n                                <div class=\"input_value\">\r\n                                    <el-input v-model=\"location\" autosize type=\"textarea\" clearable class=\"inputflex\"  placeholder=\"请输设备所在机柜位置\"  />\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    备注信息\r\n                                </div>\r\n                                <div class=\"input_value\">\r\n                                    <el-input v-model=\"description\" autosize type=\"textarea\" clearable class=\"inputflex\"  placeholder=\"请输入设备备注信息\"  />\r\n                                </div>\r\n                            </div>\r\n                        </div>       \r\n                    </div>\r\n                </div>\r\n\r\n                <!-- 表格下方功能按钮 -->\r\n                <div style=\"float: right; margin-bottom: 40px; margin-right: 72px;margin-top: 20px;\">\r\n                    <el-button @click=\"config.centerDialogVisible = false\">取消</el-button>\r\n                    <el-button type=\"primary\" :loading=\"config.isLoading\" @click=\"addNetworks\" >确认</el-button>\r\n                </div>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs, getCurrentInstance, ref } from 'vue'\r\nimport qs from 'qs'\r\n\r\nexport default ({\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n\r\n        const config = reactive({\r\n            centerDialogVisible: false,\r\n            isLoading: false\r\n        })\r\n\r\n        const addNetworksRef = ref()\r\n\r\n        const selectUserId = ref()\r\n        const selectTagId = ref()\r\n        const networks = reactive({\r\n            vendor: \"\",\r\n            product_name: \"\",\r\n            sn: \"\",\r\n            asset_number: \"\",\r\n            mgt_ip: \"\",\r\n            mgt_user_name: \"\",\r\n            mgt_pwd: \"\",\r\n            owner_id: null,\r\n            host_name: \"\",\r\n            tag_id: null,\r\n            location: \"\",\r\n            description: \"\"\r\n\r\n        })\r\n\r\n        const user = reactive({\r\n            user_arr: []\r\n        })\r\n        const tag = reactive({\r\n            tag_arr: []\r\n        })\r\n\r\n\r\n        // 查询用户列表\r\n        const getUserList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 1000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取用户列表失败\", \"warning\").notify()\r\n                }\r\n                user.user_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify() \r\n                }   \r\n            }\r\n        }\r\n        \r\n        // 查询资源标签列表\r\n        const getTagList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 1000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().tagList + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取资源标签列表失败\", \"warning\").notify()\r\n                }\r\n                tag.tag_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify()\r\n                }   \r\n            }\r\n        }\r\n\r\n\r\n        const addNetworks  = async() => {\r\n            const obj = {\r\n                vendor: networks.vendor,\r\n                product_name: networks.product_name,\r\n                sn: networks.sn,\r\n                asset_number: networks.asset_number,\r\n                mgt_ip: networks.mgt_ip,\r\n                mgt_user_name: networks.mgt_user_name,\r\n                mgt_pwd: networks.mgt_pwd,\r\n                owner_id: selectUserId.value,\r\n                host_name: networks.host_name,\r\n                tag_id: selectTagId.value,\r\n                location: networks.location,\r\n                description: networks.description\r\n            }\r\n\r\n            config.isLoading = true\r\n            const rest = await new proxy.$request(proxy.$urls.m().networksadd, obj).modepost()\r\n            if (rest.data.code !== 200) {\r\n                new proxy.$tips(\"新建网络设备失败，稍后重试\", \"error\").notify()\r\n            }\r\n            config.isLoading = false\r\n            config.centerDialogVisible = false\r\n            proxy.$emit('flushPage')\r\n\r\n        }\r\n\r\n        const addNetworksDialog = () => {\r\n            getUserList(),\r\n            getTagList()\r\n            config.centerDialogVisible = true\r\n        }\r\n\r\n        return {\r\n            networks,\r\n            config,\r\n            user,\r\n            tag,\r\n            selectUserId,\r\n            selectTagId,\r\n            addNetworks,\r\n            addNetworksDialog,\r\n            addNetworksRef\r\n        }\r\n    }\r\n    \r\n})\r\n</script>\r\n"],"mappings":";;EAmBqBA,KAAqB,EAArB;IAAA;EAAA;AAAqB;;EAEjBA,KAAqB,EAArB;IAAA;EAAA;AAAqB;gCACtBC,mBAAA,CAA8C;EAAzCC,KAAK,EAAC;AAAmB,GAAE,UAAQ;;EA0BvCF,KAAqB,EAArB;IAAA;EAAA;AAAqB;gCACtBC,mBAAA,CAA4C;EAAvCC,KAAK,EAAC;AAAmB,GAAC,SAAO;;EAEjCA,KAAK,EAAC;AAAc;gCACrBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAW,GAAC,QAEvB;;EACKA,KAAK,EAAC;AAAa;;EAKvBA,KAAK,EAAC;AAAc;iCACrBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAW,GAAC,SAEvB;;EACKA,KAAK,EAAC;AAAa;;EAKvBA,KAAK,EAAC;AAAc;iCACrBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAW,GAAC,UAEvB;;EACKA,KAAK,EAAC;AAAa;;EAO/BF,KAAsB,EAAtB;IAAA;EAAA;AAAsB;iCAInBC,mBAAA,CAAyC;EAApCC,KAAK,EAAC;AAAmB,GAAC,MAAI;;EAG1BA,KAAK,EAAC;AAAc;iCACrBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAW,GAAC,OAEvB;;EAUkBF,KAAmB,EAAnB;IAAA;EAAA;AAAmB;;EAErBA,KAA2E,EAA3E;IAAA;IAAA;IAAA;EAAA;AAA2E;;EAS1FE,KAAK,EAAC;AAAc;iCACrBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAW,GAAC,QAEvB;;EAeCA,KAAK,EAAC;AAAc;iCACrBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAW,GAAC,MAEvB;;EACKA,KAAK,EAAC;AAAa;;EAOvBA,KAAK,EAAC;AAAc;iCACrBD,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAW,GAAC,QAEvB;;EACKA,KAAK,EAAC;AAAa;;EASnCF,KAA+E,EAA/E;IAAA;IAAA;IAAA;IAAA;EAAA;AAA+E;;;;;;;;;uBAxJhGG,mBAAA,CA8JM,cA7JFC,YAAA,CA4JYC,oBAAA;gBA3JCC,MAAA,CAAAC,MAAM,CAACC,mBAAmB;iEAA1BF,MAAA,CAAAC,MAAM,CAACC,mBAAmB,GAAAC,MAAA;IACnCC,KAAK,EAAC,QAAQ;IACdC,KAAK,EAAC,KAAK;IACX,cAAY,EAAZ,EAAY;IACX,sBAAoB,EAAE;;sBAGvB,MAmJM,CAnJNV,mBAAA,CAmJM,cAlJFG,YAAA,CAOUQ,kBAAA;MANNC,GAAG,EAAC,gBAAgB;MACnBC,KAAK,EAAER,MAAA,CAAAS,QAAQ;MACfC,KAAK,EAAEC,IAAA,CAAAD,KAAK;MACb,aAAW,EAAC,OAAO;MACnB,aAAW,EAAX;iDAGJf,mBAAA,CA2DM,OA3DNiB,UA2DM,GA1DFC,mBAAA,UAAa,EACblB,mBAAA,CAwBM,OAxBNmB,UAwBM,GAvBFC,UAA8C,EAE9CpB,mBAAA,CAoBM,cAnBFG,YAAA,CAEekB,uBAAA;MAFDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC,WAAW;MAAE,gBAAc,EAAEP,IAAA,CAAAQ,KAAK;MAAEzB,KAAuC,EAAvC;QAAA;QAAA;MAAA;;wBAC/D,MAAgG,CAAhGI,YAAA,CAAgGsB,mBAAA;oBAA7EpB,MAAA,CAAAS,QAAQ,CAACY,SAAS;mEAAlBrB,MAAA,CAAAS,QAAQ,CAACY,SAAS,GAAAlB,MAAA;QAAEmB,SAAS,EAAT,EAAS;QAAC5B,KAAqB,EAArB;UAAA;QAAA,CAAqB;QAAE6B,WAAW,EAAC;;;2CAGxFzB,YAAA,CAEekB,uBAAA;MAFDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC,QAAQ;MAACxB,KAAuC,EAAvC;QAAA;QAAA;MAAA;;wBACnC,MAA6F,CAA7FI,YAAA,CAA6FsB,mBAAA;oBAA1EpB,MAAA,CAAAS,QAAQ,CAACe,MAAM;mEAAfxB,MAAA,CAAAS,QAAQ,CAACe,MAAM,GAAArB,MAAA;QAAEmB,SAAS,EAAT,EAAS;QAAC5B,KAAqB,EAArB;UAAA;QAAA,CAAqB;QAAE6B,WAAW,EAAC;;;QAGrFzB,YAAA,CAEekB,uBAAA;MAFDC,KAAK,EAAC,IAAI;MAACC,IAAI,EAAC,cAAc;MAAExB,KAAuC,EAAvC;QAAA;QAAA;MAAA;;wBAC1C,MAAoG,CAApGI,YAAA,CAAoGsB,mBAAA;oBAAjFpB,MAAA,CAAAS,QAAQ,CAACgB,YAAY;mEAArBzB,MAAA,CAAAS,QAAQ,CAACgB,YAAY,GAAAtB,MAAA;QAAEmB,SAAS,EAAT,EAAS;QAAC5B,KAAqB,EAArB;UAAA;QAAA,CAAqB;QAAE6B,WAAW,EAAC;;;QAG3FzB,YAAA,CAEekB,uBAAA;MAFDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC,IAAI;MAACxB,KAAuC,EAAvC;QAAA;QAAA;MAAA;;wBAChC,MAA2F,CAA3FI,YAAA,CAA2FsB,mBAAA;oBAAxEpB,MAAA,CAAAS,QAAQ,CAACiB,EAAE;mEAAX1B,MAAA,CAAAS,QAAQ,CAACiB,EAAE,GAAAvB,MAAA;QAAEmB,SAAS,EAAT,EAAS;QAAC5B,KAAqB,EAArB;UAAA;QAAA,CAAqB;QAAE6B,WAAW,EAAC;;;QAGjFzB,YAAA,CAEekB,uBAAA;MAFDC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC,cAAc;MAACxB,KAAuC,EAAvC;QAAA;QAAA;MAAA;;wBAC3C,MAAsG,CAAtGI,YAAA,CAAsGsB,mBAAA;oBAAnFpB,MAAA,CAAAS,QAAQ,CAACkB,YAAY;mEAArB3B,MAAA,CAAAS,QAAQ,CAACkB,YAAY,GAAAxB,MAAA;QAAEmB,SAAS,EAAT,EAAS;QAAC5B,KAAqB,EAArB;UAAA;QAAA,CAAqB;QAAE6B,WAAW,EAAC;;;YAKnGV,mBAAA,aAAgB,EAChBlB,mBAAA,CA6BM,OA7BNiC,UA6BM,GA5BFC,UAA4C,EAE5ClC,mBAAA,CAOM,OAPNmC,UAOM,GANFC,UAEM,EACNpC,mBAAA,CAEM,OAFNqC,UAEM,GADFlC,YAAA,CAAoFsB,mBAAA;kBAAjET,IAAA,CAAAsB,MAAM;iEAANtB,IAAA,CAAAsB,MAAM,GAAA9B,MAAA;MAAEmB,SAAS,EAAT,EAAS;MAAC1B,KAAK,EAAC,WAAW;MAAE2B,WAAW,EAAC;iDAI5E5B,mBAAA,CAOM,OAPNuC,UAOM,GANFC,WAEM,EACNxC,mBAAA,CAEM,OAFNyC,WAEM,GADFtC,YAAA,CAA2FsB,mBAAA;kBAAxET,IAAA,CAAA0B,aAAa;iEAAb1B,IAAA,CAAA0B,aAAa,GAAAlC,MAAA;MAAEmB,SAAS,EAAT,EAAS;MAAC1B,KAAK,EAAC,WAAW;MAAE2B,WAAW,EAAC;iDAInF5B,mBAAA,CAOM,OAPN2C,WAOM,GANFC,WAEM,EACN5C,mBAAA,CAEM,OAFN6C,WAEM,GADF1C,YAAA,CAAoHsB,mBAAA;kBAAjGT,IAAA,CAAA8B,OAAO;iEAAP9B,IAAA,CAAA8B,OAAO,GAAAtC,MAAA;MAAEmB,SAAS,EAAT,EAAS;MAAC1B,KAAK,EAAC,WAAW;MAAE8C,IAAI,EAAC,UAAU;MAAC,eAAa,EAAb,EAAa;MAACnB,WAAW,EAAC;qDAMnH5B,mBAAA,CAsEM,OAtENgD,WAsEM,GApEF9B,mBAAA,YAAe,EACflB,mBAAA,CAkEM,cAjEFiD,WAAyC,EAEzCjD,mBAAA,CAsBM,cArBFA,mBAAA,CAoBM,OApBNkD,WAoBM,GAnBFC,WAEM,EACNnD,mBAAA,CAeM,cAdFG,YAAA,CAaYiD,oBAAA;kBAbQ/C,MAAA,CAAAgD,YAAY;iEAAZhD,MAAA,CAAAgD,YAAY,GAAA7C,MAAA;MAAE,WAAS,EAAC,IAAI;MAACoB,WAAW,EAAC;;wBAErD,MAA6B,E,kBADjC1B,mBAAA,CAWYoD,SAAA,QAAAC,WAAA,CAVOlD,MAAA,CAAAmD,IAAI,CAACC,QAAQ,EAArBC,IAAI;6BADfC,YAAA,CAWYC,oBAAA;UATPC,GAAG,EAAEH,IAAI,CAACI,EAAE;UACZxC,KAAK,EAAEoC,IAAI,CAACK,UAAU;UACtBC,KAAK,EAAEN,IAAI,CAACI;;4BAGb,MAAoD,CAApD9D,mBAAA,CAAoD,QAApDiE,WAAoD,EAAAC,gBAAA,CAAvBR,IAAI,CAACS,QAAQ,kBAC1CnE,mBAAA,CAEiC,QAFjCoE,WAEiC,EAAAF,gBAAA,CAAzBR,IAAI,CAACK,UAAU,iB;;;;;;;6CAO3C/D,mBAAA,CAgBM,cAfFA,mBAAA,CAcM,OAdNqE,WAcM,GAbFC,WAEM,EACNtE,mBAAA,CASM,cARFG,YAAA,CAOYiD,oBAAA;kBAPQ/C,MAAA,CAAAkE,WAAW;iEAAXlE,MAAA,CAAAkE,WAAW,GAAA/D,MAAA;MAAE,WAAS,EAAC,IAAI;MAACoB,WAAW,EAAC;;wBAEpD,MAA2B,E,kBAD/B1B,mBAAA,CAKMoD,SAAA,QAAAC,WAAA,CAJalD,MAAA,CAAAmE,GAAG,CAACC,OAAO,EAAnBf,IAAI;6BADfC,YAAA,CAKMC,oBAAA;UAHDC,GAAG,EAAEH,IAAI,CAACI,EAAE;UACZxC,KAAK,EAAEoC,IAAI,CAACgB,IAAI;UAChBV,KAAK,EAAEN,IAAI,CAACI;;;;;6CAOjC9D,mBAAA,CASM,cARFA,mBAAA,CAOM,OAPN2E,WAOM,GANFC,WAEM,EACN5E,mBAAA,CAEM,OAFN6E,WAEM,GADF1E,YAAA,CAA+GsB,mBAAA;kBAA5FT,IAAA,CAAA8D,QAAQ;mEAAR9D,IAAA,CAAA8D,QAAQ,GAAAtE,MAAA;MAAEuE,QAAQ,EAAR,EAAQ;MAAChC,IAAI,EAAC,UAAU;MAACpB,SAAS,EAAT,EAAS;MAAC1B,KAAK,EAAC,WAAW;MAAE2B,WAAW,EAAC;mDAK3G5B,mBAAA,CASM,cARFA,mBAAA,CAOM,OAPNgF,WAOM,GANFC,WAEM,EACNjF,mBAAA,CAEM,OAFNkF,WAEM,GADF/E,YAAA,CAAiHsB,mBAAA;kBAA9FT,IAAA,CAAAmE,WAAW;mEAAXnE,IAAA,CAAAmE,WAAW,GAAA3E,MAAA;MAAEuE,QAAQ,EAAR,EAAQ;MAAChC,IAAI,EAAC,UAAU;MAACpB,SAAS,EAAT,EAAS;MAAC1B,KAAK,EAAC,WAAW;MAAE2B,WAAW,EAAC;uDAOtHV,mBAAA,cAAiB,EACjBlB,mBAAA,CAGM,OAHNoF,WAGM,GAFFjF,YAAA,CAAqEkF,oBAAA;MAAzDC,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAAA/E,MAAA,IAAEH,MAAA,CAAAC,MAAM,CAACC,mBAAmB;;wBAAU,MAAE,C,iBAAF,IAAE,E;;QACzDJ,YAAA,CAA0FkF,oBAAA;MAA/EtC,IAAI,EAAC,SAAS;MAAEyC,OAAO,EAAEnF,MAAA,CAAAC,MAAM,CAACmF,SAAS;MAAGH,OAAK,EAAEjF,MAAA,CAAAqF;;wBAAc,MAAE,C,iBAAF,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}