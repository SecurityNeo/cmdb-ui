{"ast":null,"code":"import { reactive, getCurrentInstance } from 'vue';\nexport default {\n  methods: {\n    flushUserList() {\n      this.$parent.flushUserList();\n    }\n  },\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const res = reactive({\n      centerDialogVisible: false,\n      userId: 0\n    });\n\n    //删除用户\n    const deleteUser = async () => {\n      console.log(res.userId);\n      res.centerDialogVisible = false;\n      await new proxy.$request(proxy.$urls.m().userdelete + \"?id=\" + res.userId).modedelete();\n      flushUserList();\n    };\n\n    // 被父组件user.vue调用\n    function deleteDialog(userId) {\n      res.centerDialogVisible = true;\n      res.userId = userId;\n    }\n    return {\n      res,\n      deleteUser,\n      deleteDialog\n    };\n  }\n};","map":{"version":3,"names":["reactive","getCurrentInstance","methods","flushUserList","$parent","setup","proxy","res","centerDialogVisible","userId","deleteUser","console","log","$request","$urls","m","userdelete","modedelete","deleteDialog"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\system\\components\\user-dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n            v-model=\"res.centerDialogVisible\"\r\n            title=\"提示\"\r\n            width=\"30%\"\r\n            align-center\r\n            :close-on-click-modal=\"false\"\r\n        >\r\n            <span>删除用户后该用户无法登陆本平台，此用户数据也将被清空，请谨慎操作！</span>\r\n            <template #footer>\r\n            <span >\r\n                <el-button @click=\"res.centerDialogVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"deleteUser\">确认</el-button>\r\n            </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive, getCurrentInstance} from 'vue'\r\n\r\n\r\nexport default {\r\n    methods:{\r\n        flushUserList() {\r\n            this.$parent.flushUserList()\r\n        }\r\n    },\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n        const res = reactive({\r\n            centerDialogVisible: false,\r\n            userId: 0\r\n        })\r\n        \r\n        //删除用户\r\n        const deleteUser = async() => {\r\n            console.log(res.userId);\r\n            res.centerDialogVisible = false\r\n           await new proxy.$request(proxy.$urls.m().userdelete + \"?id=\" + res.userId).modedelete()\r\n           flushUserList()\r\n        }\r\n\r\n        // 被父组件user.vue调用\r\n        function deleteDialog(userId) {\r\n            res.centerDialogVisible = true\r\n            res.userId = userId\r\n        }\r\n\r\n        return {res, deleteUser,deleteDialog}\r\n    }\r\n}\r\n</script>"],"mappings":"AAqBA,SAAQA,QAAQ,EAAEC,kBAAkB,QAAO,KAAI;AAG/C,eAAe;EACXC,OAAO,EAAC;IACJC,aAAaA,CAAA,EAAG;MACZ,IAAI,CAACC,OAAO,CAACD,aAAa,CAAC;IAC/B;EACJ,CAAC;EACDE,KAAKA,CAAA,EAAG;IACJ,MAAM;MAACC;IAAK,IAAIL,kBAAkB,CAAC;IACnC,MAAMM,GAAE,GAAIP,QAAQ,CAAC;MACjBQ,mBAAmB,EAAE,KAAK;MAC1BC,MAAM,EAAE;IACZ,CAAC;;IAED;IACA,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAW;MAC1BC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACE,MAAM,CAAC;MACvBF,GAAG,CAACC,mBAAkB,GAAI,KAAI;MAC/B,MAAM,IAAIF,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAACC,CAAC,CAAC,CAAC,CAACC,UAAS,GAAI,MAAK,GAAIT,GAAG,CAACE,MAAM,CAAC,CAACQ,UAAU,CAAC;MACtFd,aAAa,CAAC;IACjB;;IAEA;IACA,SAASe,YAAYA,CAACT,MAAM,EAAE;MAC1BF,GAAG,CAACC,mBAAkB,GAAI,IAAG;MAC7BD,GAAG,CAACE,MAAK,GAAIA,MAAK;IACtB;IAEA,OAAO;MAACF,GAAG;MAAEG,UAAU;MAACQ;IAAY;EACxC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}