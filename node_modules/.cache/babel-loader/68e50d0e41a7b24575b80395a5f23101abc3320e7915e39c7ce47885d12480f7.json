{"ast":null,"code":"import { reactive, toRefs, getCurrentInstance } from \"vue\";\nimport { Base64 } from 'js-base64';\nexport default {\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const user = reactive({\n      account: '',\n      password: ''\n    });\n    const keyDown = e => {\n      if (e.keyCode == 13 || e.keyCode == 100) {\n        login();\n      }\n    };\n    onMounted(() => {\n      window.addEventListener('keydown', keyDown);\n    });\n    const login = async () => {\n      const obj = {\n        username: user.account,\n        password: Base64.encode(user.password)\n      };\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().login, obj).modepost();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"用户名或密码错误,请重新输入\", \"warning\").notify();\n        } else {\n          // 页面跳转\n        }\n      } catch (e) {\n        new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify();\n      }\n    };\n    return {\n      ...toRefs(user),\n      login\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","getCurrentInstance","Base64","setup","proxy","user","account","password","keyDown","e","keyCode","login","onMounted","window","addEventListener","obj","username","encode","rest","$request","$urls","m","modepost","data","code","$tips","notify"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\login\\login.vue"],"sourcesContent":["<template>\r\n    <div id='backcont'>  \r\n        <div id=\"gifcont\">\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"meituan-content\">\r\n\r\n        <div class=\"login-content\">\r\n        \r\n            <div class=\"login-title \">\r\n                登录         \r\n                <div class=\"login-user\">\r\n                    <p class=\"login-user-p\">\r\n                        <el-input v-model=\"account\" clearable class=\"inputflex\"  placeholder=\"用户名\"  />\r\n                    </p>\r\n                </div>\r\n                <div class=\"login-user\">\r\n                    <p class=\"login-user-p\">\r\n                        <el-input v-model=\"password\" clearable class=\"inputflex\" type=\"password\" placeholder=\"密码\" show-password />\r\n                    </p>\r\n                </div>\r\n\r\n                <p>\r\n                    <el-button type=\"primary\" @click=\"login\" @keydown.enter=\"keyDown()\" class=\"login-botton\">登录</el-button>\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { reactive, toRefs, getCurrentInstance } from \"vue\"\r\nimport { Base64 } from 'js-base64'\r\n\r\n\r\nexport default {\r\n    setup(){\r\n        const {proxy} = getCurrentInstance()\r\n        const user = reactive({\r\n            account: '',\r\n            password: ''\r\n        })\r\n\r\n        const keyDown = (e) => {\r\n            if (e.keyCode == 13 || e.keyCode == 100) {\r\n                login()\r\n            }\r\n        }\r\n\r\n        onMounted(() => {\r\n            window.addEventListener('keydown', keyDown)\r\n        });\r\n\r\n        const login = async()=> {\r\n            const obj = {\r\n                username: user.account,\r\n                password: Base64.encode(user.password)\r\n            }\r\n\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().login, obj).modepost()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"用户名或密码错误,请重新输入\", \"warning\").notify()\r\n                } else {\r\n                    // 页面跳转\r\n                }\r\n            } catch (e) {\r\n                new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify()\r\n            }\r\n        }\r\n\r\n        return { ...toRefs(user), login}\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAmCA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,kBAAiB,QAAS,KAAI;AACzD,SAASC,MAAK,QAAS,WAAU;AAGjC,eAAe;EACXC,KAAKA,CAAA,EAAE;IACH,MAAM;MAACC;IAAK,IAAIH,kBAAkB,CAAC;IACnC,MAAMI,IAAG,GAAIN,QAAQ,CAAC;MAClBO,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACd,CAAC;IAED,MAAMC,OAAM,GAAKC,CAAC,IAAK;MACnB,IAAIA,CAAC,CAACC,OAAM,IAAK,EAAC,IAAKD,CAAC,CAACC,OAAM,IAAK,GAAG,EAAE;QACrCC,KAAK,CAAC;MACV;IACJ;IAEAC,SAAS,CAAC,MAAM;MACZC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEN,OAAO;IAC9C,CAAC,CAAC;IAEF,MAAMG,KAAI,GAAI,MAAAA,CAAA,KAAU;MACpB,MAAMI,GAAE,GAAI;QACRC,QAAQ,EAAEX,IAAI,CAACC,OAAO;QACtBC,QAAQ,EAAEL,MAAM,CAACe,MAAM,CAACZ,IAAI,CAACE,QAAQ;MACzC;MAEA,IAAI;QACA,MAAMW,IAAG,GAAI,MAAM,IAAId,KAAK,CAACe,QAAQ,CAACf,KAAK,CAACgB,KAAK,CAACC,CAAC,CAAC,CAAC,CAACV,KAAK,EAAEI,GAAG,CAAC,CAACO,QAAQ,CAAC;QAE3E,IAAIJ,IAAI,CAACK,IAAI,CAACC,IAAG,KAAM,GAAE,EAAI;UACzB,IAAIpB,KAAK,CAACqB,KAAK,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAACC,MAAM,CAAC;QACxD,OAAO;UACH;QAAA;MAER,EAAE,OAAOjB,CAAC,EAAE;QACR,IAAIL,KAAK,CAACqB,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC,CAACC,MAAM,CAAC;MACnD;IACJ;IAEA,OAAO;MAAE,GAAG1B,MAAM,CAACK,IAAI,CAAC;MAAEM;IAAK;EACnC;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}