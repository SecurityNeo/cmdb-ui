{"ast":null,"code":"import { reactive, toRefs, onMounted, getCurrentInstance, ref } from 'vue';\nimport { View, Hide } from '@element-plus/icons-vue';\nimport addNetworksDialog from './components/addnetworks-dialog.vue';\nimport qs from 'qs';\nexport default {\n  components: {\n    View,\n    Hide,\n    addNetworksDialog\n  },\n  setup() {\n    const config = reactive({\n      isRootPwdDisplay: false\n    });\n    const networks = reactive({\n      networks_arr: [],\n      page_size: 10,\n      page: 1,\n      total: 0\n    });\n    const addNetworksDialog = ref();\n    onMounted(() => {\n      getNetworkList();\n    });\n    const {\n      proxy\n    } = getCurrentInstance();\n\n    // 查询服务器列表\n    const getNetworkList = async () => {\n      const query = qs.stringify({\n        page: networks.page,\n        size: networks.page_size\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().networkslist + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取网络设备列表失败\", \"warning\").notify();\n        }\n        networks.networks_arr = rest.data.data;\n        networks.total = rest.data.total;\n        networks.page = rest.data.page;\n      } catch (e) {\n        console.log(e);\n        if (e.code !== 401) {\n          new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify();\n        }\n      }\n    };\n\n    // 更改每页展示条数后触发\n    function handleSizeChange(val) {\n      networks.page_size = val;\n      getNetworkList();\n    }\n\n    // 更改页码后触发\n    function handleCurrentChange(val) {\n      networks.page = val;\n      getNetworkList();\n    }\n    const clickUpdateVm = val => {\n      console.log(val);\n    };\n    const clickAddNetworks = () => {\n      addNetworksDialog.value.addNetworks();\n    };\n    const clickDelete = val => {\n      console.log(val);\n    };\n    function rootPwdDisplaySwitch() {\n      config.isRootPwdDisplay = !config.isRootPwdDisplay;\n    }\n    return {\n      config,\n      rootPwdDisplaySwitch,\n      ...toRefs(networks),\n      clickDelete,\n      clickAddNetworks,\n      clickUpdateVm,\n      getNetworkList,\n      handleSizeChange,\n      handleCurrentChange,\n      addNetworksDialog\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","onMounted","getCurrentInstance","ref","View","Hide","addNetworksDialog","qs","components","setup","config","isRootPwdDisplay","networks","networks_arr","page_size","page","total","getNetworkList","proxy","query","stringify","size","rest","$request","$urls","m","networkslist","modeget","data","code","$tips","notify","e","console","log","handleSizeChange","val","handleCurrentChange","clickUpdateVm","clickAddNetworks","value","addNetworks","clickDelete","rootPwdDisplaySwitch"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\resource\\networks\\networks.vue"],"sourcesContent":["<template>\r\n    <div class=\"oderding\">\r\n        <div class=\"heading\">\r\n            <div>网络设备管理</div>\r\n\r\n            <!-- 表格上方功能按钮 -->\r\n            <div class=\"table-head\">\r\n                <el-button type=\"primary\" size=\"small\" @click=\"clickAddNetworks\" >新建网络设备</el-button>\r\n            </div>\r\n\r\n            <div>\r\n                <!-- 物理机表格 -->\r\n                <div>          \r\n                    <el-table :data=\"networks_arr\" stripe   style=\"width: 100% \" class=\"cell\">\r\n                        <el-table-column type=\"expand\">\r\n                            <template #default=\"props\">\r\n                                <div>\r\n                                    <div class=\"kv_display\">\r\n                                        <div class=\"k_display\">服务器序列号: </div>  \r\n                                        <div>{{ props.row.sn }}</div>\r\n                                    </div>\r\n                                    <div class=\"kv_display\">\r\n                                        <div class=\"k_display\">管理用户名: </div>\r\n                                        <div>{{ props.row.mgt_user_name }}</div>\r\n                                    </div>\r\n                                    <div class=\"kv_display\">\r\n                                        <div class=\"k_display\">管理用户密码: </div>\r\n                                        <div v-if=\"config.isRootPwdDisplay === false\" style=\"display: flex;align-items: center;\">\r\n                                            <div style=\"margin-right: 15px;\"> ---- </div> <el-icon @click=\"rootPwdDisplaySwitch\"><View /></el-icon>\r\n                                        </div>\r\n                                        <div v-else  style=\"display: flex;align-items: center;\">\r\n                                            <div style=\"margin-right: 15px;\">{{ props.row.mgt_pwd }}</div> <el-icon @click=\"rootPwdDisplaySwitch\"><Hide /></el-icon>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"kv_display\">\r\n                                        <div class=\"k_display\">备注信息: </div>\r\n                                        <div>{{ props.row.description }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"host_name\" label=\"主机名\"  />\r\n                        <el-table-column prop=\"asset_number\" label=\"资产编号\"  />\r\n                        <el-table-column prop=\"location\" label=\"位置\" />\r\n                        <el-table-column prop=\"mgt_ip\" label=\"管理地址\"  width=200px />\r\n                        <el-table-column prop=\"tag.name\" label=\"资源分组\" />\r\n                        <el-table-column prop=\"user.username\" label=\"责任人\" width=\"100px\"/>\r\n\r\n                        <el-table-column fixed=\"right\" label=\"操作\" width=\"100\">\r\n                            <template #default=\"scope\">\r\n                                <el-button link type=\"primary\" size=\"small\" @click=\"clickUpdateVm(scope.row)\" >编辑</el-button>\r\n                                <el-button link type=\"primary\" size=\"small\" @click=\"clickDelete(scope.row.id)\" >删除</el-button>\r\n                            </template>\r\n                        </el-table-column>   \r\n                    </el-table>\r\n                </div>\r\n\r\n                <!-- 分页模块 -->\r\n                <div class=\"pagination\">\r\n                    <el-pagination\r\n                    v-model:current-page=\"page\"\r\n                    v-model:page-size=\"page_size\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    small\r\n                    background\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\"\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <addNetworksDialog ref=\"addNetworksDialog\" @flushPage=\"getNetworkList\"></addNetworksDialog>\r\n    </div>    \r\n</template>\r\n\r\n<script>\r\nimport {reactive, toRefs, onMounted, getCurrentInstance, ref} from 'vue'\r\nimport {View, Hide} from '@element-plus/icons-vue'\r\nimport addNetworksDialog from './components/addnetworks-dialog.vue'\r\nimport qs from 'qs'\r\n\r\nexport default {\r\n    components: {\r\n        View,\r\n        Hide,\r\n        addNetworksDialog\r\n    },\r\n    setup() {\r\n        const config = reactive({\r\n            isRootPwdDisplay: false\r\n        })\r\n        const networks = reactive({\r\n            networks_arr: [],\r\n            page_size: 10,\r\n            page: 1,\r\n            total: 0\r\n        })\r\n\r\n        const addNetworksDialog = ref()\r\n\r\n        onMounted(()=>{\r\n            getNetworkList()\r\n        })\r\n\r\n        const {proxy} = getCurrentInstance()\r\n\r\n        // 查询服务器列表\r\n        const getNetworkList = async()=> {\r\n            const query = qs.stringify({\r\n                page: networks.page,\r\n                size: networks.page_size\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().networkslist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取网络设备列表失败\", \"warning\").notify()\r\n                }\r\n                networks.networks_arr = rest.data.data\r\n                networks.total = rest.data.total\r\n                networks.page = rest.data.page\r\n                \r\n            } catch (e) {\r\n                console.log(e);\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify()\r\n                }     \r\n            }\r\n\r\n        }\r\n\r\n\r\n        // 更改每页展示条数后触发\r\n        function handleSizeChange(val) {\r\n            networks.page_size = val\r\n            getNetworkList()\r\n        }\r\n\r\n        // 更改页码后触发\r\n        function handleCurrentChange(val) {\r\n            networks.page = val\r\n            getNetworkList()\r\n        }\r\n\r\n        const clickUpdateVm = (val)=> {\r\n            console.log(val);\r\n        }\r\n\r\n        const clickAddNetworks = ()=> {\r\n            addNetworksDialog.value.addNetworks()\r\n        }\r\n\r\n        const clickDelete = (val)=> {\r\n            console.log(val);\r\n        }\r\n\r\n        function rootPwdDisplaySwitch() {\r\n            config.isRootPwdDisplay = !config.isRootPwdDisplay\r\n        }\r\n        return {\r\n            config, \r\n            rootPwdDisplaySwitch,\r\n            ...toRefs(networks), \r\n            clickDelete, \r\n            clickAddNetworks,\r\n            clickUpdateVm,\r\n            getNetworkList,\r\n            handleSizeChange,\r\n            handleCurrentChange,\r\n            addNetworksDialog\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}