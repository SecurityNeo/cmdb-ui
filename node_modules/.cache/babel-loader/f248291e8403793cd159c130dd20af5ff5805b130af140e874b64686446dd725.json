{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"width\": \"500px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_block_title\"\n}, \"虚拟机基础信息\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"input-float\"\n};\nconst _hoisted_5 = {\n  class: \"input-float\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 管理网IP地址 \", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"input_value\"\n};\nconst _hoisted_8 = {\n  class: \"input-float\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" root用户密码 \", -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"input_value\"\n};\nconst _hoisted_11 = {\n  class: \"input-float\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 存储网IP地址 \", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  class: \"input_value\"\n};\nconst _hoisted_14 = {\n  style: {\n    \"display\": \"flex\"\n  }\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_block_title\"\n}, \"公共属性\", -1 /* HOISTED */);\nconst _hoisted_16 = {\n  class: \"input-float\"\n};\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 责任人 \", -1 /* HOISTED */);\nconst _hoisted_18 = {\n  style: {\n    \"float\": \"left\"\n  }\n};\nconst _hoisted_19 = {\n  style: {\n    \"float\": \"right\",\n    \"color\": \"var(--el-text-color-secondary)\",\n    \"font-size\": \"13px\"\n  }\n};\nconst _hoisted_20 = {\n  class: \"input-float\"\n};\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 资源标签 \", -1 /* HOISTED */);\nconst _hoisted_22 = {\n  class: \"input-float\"\n};\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 宿主机 \", -1 /* HOISTED */);\nconst _hoisted_24 = {\n  class: \"input-float\"\n};\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"input_key\"\n}, \" 备注信息 \", -1 /* HOISTED */);\nconst _hoisted_26 = {\n  class: \"input_value\"\n};\nconst _hoisted_27 = {\n  style: {\n    \"float\": \"right\",\n    \"margin-bottom\": \"40px\",\n    \"margin-right\": \"72px\",\n    \"margin-top\": \"20px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_dialog, {\n    modelValue: $setup.config.centerDialogVisible,\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $setup.config.centerDialogVisible = $event),\n    title: \"新建虚拟机\",\n    width: \"40%\",\n    \"align-center\": \"\",\n    \"close-on-click-modal\": false\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", null, [_createVNode(_component_el_form, {\n      ref: \"addUserRef\",\n      model: $setup.user,\n      rules: _ctx.rules,\n      \"label-width\": \"120px\",\n      \"status-icon\": \"\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" 基础信息 \"), _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createVNode(_component_el_form_item, {\n        label: \"主机名\",\n        prop: \"host_name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.vm.host_name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.vm.host_name = $event),\n          clearable: \"\",\n          class: \"inputflex\",\n          placeholder: \"请请输入主机名\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_form_item, {\n        label: \"主机名\",\n        prop: \"host_name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.vm.host_name,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.vm.host_name = $event),\n          clearable: \"\",\n          class: \"inputflex\",\n          placeholder: \"请请输入主机名\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_input, {\n        modelValue: _ctx.mgt_ip,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.mgt_ip = $event),\n        clearable: \"\",\n        class: \"inputflex\",\n        placeholder: \"请输管理网IP地址\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_createVNode(_component_el_input, {\n        modelValue: _ctx.mgt_root_pwd,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.mgt_root_pwd = $event),\n        clearable: \"\",\n        class: \"inputflex\",\n        type: \"password\",\n        \"show-password\": \"\",\n        placeholder: \"请输入root用户密码\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"div\", _hoisted_13, [_createVNode(_component_el_input, {\n        modelValue: _ctx.storage_ip,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.storage_ip = $event),\n        clearable: \"\",\n        class: \"inputflex\",\n        placeholder: \"请输存储网IP地址\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])])])])]), _createElementVNode(\"div\", _hoisted_14, [_createCommentVNode(\" 公共属性配置 \"), _createElementVNode(\"div\", null, [_hoisted_15, _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _createElementVNode(\"div\", null, [_createVNode(_component_el_select, {\n        modelValue: $setup.selectUserId,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.selectUserId = $event),\n        \"value-key\": \"id\",\n        placeholder: \"请选择责任人\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.user.user_arr, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item.id,\n            label: item.name_alias,\n            value: item.id\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_18, _toDisplayString(item.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_19, _toDisplayString(item.name_alias), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_20, [_hoisted_21, _createElementVNode(\"div\", null, [_createVNode(_component_el_select, {\n        modelValue: $setup.selectTagId,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.selectTagId = $event),\n        \"value-key\": \"id\",\n        placeholder: \"请选择资源标签\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.tag.tag_arr, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item.id,\n            label: item.name,\n            value: item.id\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_22, [_hoisted_23, _createElementVNode(\"div\", null, [_createVNode(_component_el_select, {\n        modelValue: $setup.selectHostId,\n        \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.selectHostId = $event),\n        \"value-key\": \"id\",\n        placeholder: \"请选择虚拟机所在宿主机\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.host.host_arr, item => {\n          return _openBlock(), _createBlock(_component_el_option, {\n            key: item.id,\n            label: item.host_name,\n            value: item.id\n          }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_24, [_hoisted_25, _createElementVNode(\"div\", _hoisted_26, [_createVNode(_component_el_input, {\n        modelValue: _ctx.description,\n        \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => _ctx.description = $event),\n        autosize: \"\",\n        type: \"textarea\",\n        clearable: \"\",\n        class: \"inputflex\",\n        placeholder: \"请输服务器备注信息\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])])])])])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"]), _createCommentVNode(\" 表格下方功能按钮 \"), _createElementVNode(\"div\", _hoisted_27, [_createVNode(_component_el_button, {\n      onClick: _cache[9] || (_cache[9] = $event => $setup.config.centerDialogVisible = false)\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"取消\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      loading: $setup.config.isLoading,\n      onClick: $setup.addVm\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"确认\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\", \"onClick\"])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["style","_createElementVNode","class","_createElementBlock","_createVNode","_component_el_dialog","$setup","config","centerDialogVisible","$event","title","width","_component_el_form","ref","model","user","rules","_ctx","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_component_el_form_item","label","prop","_component_el_input","vm","host_name","clearable","placeholder","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","mgt_ip","_hoisted_8","_hoisted_9","_hoisted_10","mgt_root_pwd","type","_hoisted_11","_hoisted_12","_hoisted_13","storage_ip","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_component_el_select","selectUserId","_Fragment","_renderList","user_arr","item","_createBlock","_component_el_option","key","id","name_alias","value","_hoisted_18","_toDisplayString","username","_hoisted_19","_hoisted_20","_hoisted_21","selectTagId","tag","tag_arr","name","_hoisted_22","_hoisted_23","selectHostId","host","host_arr","_hoisted_24","_hoisted_25","_hoisted_26","description","autosize","_hoisted_27","_component_el_button","onClick","_cache","loading","isLoading","addVm"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\resource\\vm\\components\\addvm-dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n            v-model=\"config.centerDialogVisible\"\r\n            title=\"新建虚拟机\"\r\n            width=\"40%\"\r\n            align-center\r\n            :close-on-click-modal=\"false\"\r\n            \r\n        >\r\n\r\n            <div >\r\n                <el-form\r\n                    ref=\"addUserRef\"\r\n                    :model=\"user\"\r\n                    :rules=\"rules\"\r\n                    label-width=\"120px\"\r\n                    status-icon\r\n                >\r\n                    <div style=\"display: flex;\">\r\n                        <!-- 基础信息 -->\r\n                        <div style=\"width: 500px;\">\r\n                            <div class=\"input_block_title\">虚拟机基础信息</div>\r\n                            <el-form-item label=\"主机名\" prop=\"host_name\">\r\n                                <el-input v-model=\"vm.host_name\"  clearable class=\"inputflex\"  placeholder=\"请请输入主机名\"  />\r\n                            </el-form-item>\r\n\r\n                            <div class=\"input-float \">\r\n                                <el-form-item label=\"主机名\" prop=\"host_name\">\r\n                                    <el-input v-model=\"vm.host_name\"  clearable class=\"inputflex\"  placeholder=\"请请输入主机名\"  />\r\n                                </el-form-item>\r\n                            </div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    管理网IP地址\r\n                                </div>\r\n                                <div class=\"input_value\">\r\n                                    <el-input v-model=\"mgt_ip\" clearable class=\"inputflex\"  placeholder=\"请输管理网IP地址\"  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    root用户密码\r\n                                </div>\r\n                                <div class=\"input_value\">\r\n                                    <el-input v-model=\"mgt_root_pwd\" clearable class=\"inputflex\"  type=\"password\" show-password placeholder=\"请输入root用户密码\"  />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    存储网IP地址\r\n                                </div>\r\n                                <div class=\"input_value\">\r\n                                    <el-input v-model=\"storage_ip\" clearable class=\"inputflex\"  placeholder=\"请输存储网IP地址\"  />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div style=\"display: flex;\">\r\n                        <!-- 公共属性配置 -->\r\n                        <div>\r\n                            <div class=\"input_block_title\">公共属性</div>\r\n\r\n                            <div>\r\n                                <div class=\"input-float \">\r\n                                    <div class=\"input_key\">\r\n                                        责任人\r\n                                    </div>\r\n                                    <div>\r\n                                        <el-select v-model=\"selectUserId\" value-key=\"id\" placeholder=\"请选择责任人\">\r\n                                            <el-option\r\n                                                v-for=\"item in user.user_arr\"\r\n                                                :key=\"item.id\"\r\n                                                :label=\"item.name_alias\"\r\n                                                :value=\"item.id\"\r\n                                                >\r\n\r\n                                                <span style=\"float: left\">{{ item.username }}</span>\r\n                                                <span\r\n                                                    style=\"float: right;color: var(--el-text-color-secondary);font-size: 13px;\"\r\n                                                    >{{ item.name_alias }}</span>\r\n                                            </el-option>\r\n                                        </el-select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div class=\"input-float \">\r\n                                    <div class=\"input_key\">\r\n                                        资源标签\r\n                                    </div>\r\n                                    <div>\r\n                                        <el-select v-model=\"selectTagId\" value-key=\"id\" placeholder=\"请选择资源标签\">\r\n                                            <el-option\r\n                                                v-for=\"item in tag.tag_arr\"\r\n                                                :key=\"item.id\"\r\n                                                :label=\"item.name\"\r\n                                                :value=\"item.id\"\r\n                                                />\r\n                                        </el-select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div class=\"input-float \">\r\n                                    <div class=\"input_key\">\r\n                                        宿主机\r\n                                    </div>\r\n                                    <div>\r\n                                        <el-select v-model=\"selectHostId\" value-key=\"id\" placeholder=\"请选择虚拟机所在宿主机\">\r\n                                            <el-option\r\n                                                v-for=\"item in host.host_arr\"\r\n                                                :key=\"item.id\"\r\n                                                :label=\"item.host_name\"\r\n                                                :value=\"item.id\"\r\n                                                />\r\n                                        </el-select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div class=\"input-float \">\r\n                                    <div class=\"input_key\">\r\n                                        备注信息\r\n                                    </div>\r\n                                    <div class=\"input_value\">\r\n                                        <el-input v-model=\"description\" autosize type=\"textarea\" clearable class=\"inputflex\"  placeholder=\"请输服务器备注信息\"  />\r\n                                    </div>\r\n                                </div>\r\n                            </div>       \r\n                        </div>\r\n                    </div>\r\n                </el-form>\r\n\r\n\r\n                <!-- 表格下方功能按钮 -->\r\n                <div style=\"float: right; margin-bottom: 40px; margin-right: 72px;margin-top: 20px;\">\r\n                    <el-button @click=\"config.centerDialogVisible = false\">取消</el-button>\r\n                    <el-button type=\"primary\" :loading=\"config.isLoading\" @click=\"addVm\" >确认</el-button>\r\n                </div>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs, getCurrentInstance, ref } from 'vue'\r\nimport qs from 'qs'\r\n\r\nexport default ({\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n\r\n        const config = reactive({\r\n            centerDialogVisible: false,\r\n            isLoading: false\r\n        })\r\n\r\n        const selectUserId = ref()\r\n        const selectTagId = ref()\r\n        const selectHostId = ref()\r\n        const vm = reactive({\r\n            mgt_ip: \"\",\r\n            mgt_root_pwd: \"\",\r\n            storage_ip: \"\",\r\n            owner_id: null,\r\n            host_name: \"\",\r\n            tag_id: null,\r\n            host_id: null,\r\n            description: \"\"\r\n        })\r\n\r\n        const user = reactive({\r\n            user_arr: []\r\n        })\r\n        const tag = reactive({\r\n            tag_arr: []\r\n        })\r\n        const host = reactive({\r\n            host_arr: []\r\n        })\r\n\r\n        // 查询用户列表\r\n        const getUserList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 1000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取用户列表失败\", \"warning\").notify()\r\n                }\r\n                user.user_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify() \r\n                }   \r\n            }\r\n        }\r\n        \r\n        // 查询资源标签列表\r\n        const getTagList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 1000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().tagList + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取资源标签列表失败\", \"warning\").notify()\r\n                }\r\n                tag.tag_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify()\r\n                }   \r\n            }\r\n        }\r\n\r\n                // 查询服务器列表\r\n        const getServerList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 2000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().serverlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取服务器列表失败\", \"warning\").notify()\r\n                }\r\n                host.host_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify()\r\n                }     \r\n            }\r\n\r\n        }\r\n\r\n        const addVm  = async() => {\r\n            const obj = {\r\n                mgt_ip: vm.mgt_ip,\r\n                mgt_root_pwd: vm.mgt_root_pwd,\r\n                storage_ip: vm.storage_ip,\r\n                owner_id: selectUserId.value,\r\n                host_name: vm.host_name,\r\n                tag_id: selectTagId.value,\r\n                host_id: selectHostId.value,\r\n                description: vm.description,\r\n            }\r\n\r\n            config.isLoading = true\r\n            const rest = await new proxy.$request(proxy.$urls.m().vmadd, obj).modepost()\r\n            if (rest.data.code !== 200) {\r\n                new proxy.$tips(\"新建虚拟机失败，稍后重试\", \"error\").notify()\r\n            }\r\n            config.isLoading = false\r\n            config.centerDialogVisible = false\r\n            proxy.$emit('flushPage')\r\n\r\n        }\r\n\r\n        const addVmDialog = () => {\r\n            getUserList(),\r\n            getTagList(),\r\n            getServerList()\r\n            config.centerDialogVisible = true\r\n        }\r\n\r\n        return {\r\n            vm,\r\n            config,\r\n            user,\r\n            tag,\r\n            host,\r\n            selectHostId,\r\n            selectUserId,\r\n            selectTagId,\r\n            addVm,\r\n            addVmDialog\r\n        }\r\n    }\r\n    \r\n})\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}