{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"oderding\"\n};\nconst _hoisted_2 = {\n  class: \"heading\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", null, \"用户管理\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"table-head\"\n};\nconst _hoisted_5 = {\n  style: {\n    \"font-size\": \"11px\"\n  }\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  class: \"pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_deleteUserDialog = _resolveComponent(\"deleteUserDialog\");\n  const _component_addUserDialog = _resolveComponent(\"addUserDialog\");\n  const _component_updateUserDialog = _resolveComponent(\"updateUserDialog\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createCommentVNode(\" 表格上方功能按钮 \"), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $setup.clickAdduser\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"新建用户\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createElementVNode(\"div\", null, [_createCommentVNode(\" 用户表格 \"), _createElementVNode(\"div\", null, [_createVNode(_component_el_table, {\n    data: _ctx.user_arr,\n    stripe: \"\",\n    style: {\n      \"width\": \"100%\"\n    },\n    class: \"cell\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"username,name_alias\",\n      label: \"用户名/姓名\"\n    }, {\n      default: _withCtx(scope => [_createElementVNode(\"div\", null, _toDisplayString(scope.row.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString(scope.row.name_alias), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"phone\",\n      label: \"电话\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"mail\",\n      label: \"邮箱\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"role\",\n      label: \"角色\"\n    }, {\n      default: _withCtx(scope => [scope.row.role === 'admin' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" 系统管理员 \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" 普通用户 \"))]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"CreatedAt\",\n      formatter: $options.formatTime,\n      label: \"创建时间\"\n    }, null, 8 /* PROPS */, [\"formatter\"]), _createVNode(_component_el_table_column, {\n      fixed: \"right\",\n      label: \"操作\",\n      width: \"120\"\n    }, {\n      default: _withCtx(scope => [_createCommentVNode(\" 系统管理员不允许编辑与删除 \"), scope.row.id === 1 ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        disabled: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"编辑\")]),\n        _: 1 /* STABLE */\n      })) : (_openBlock(), _createBlock(_component_el_button, {\n        key: 1,\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.clickUpdateUser(scope.row)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"编辑\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])), scope.row.id === 1 ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 2,\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        disabled: \"\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"删除\")]),\n        _: 1 /* STABLE */\n      })) : (_openBlock(), _createBlock(_component_el_button, {\n        key: 3,\n        link: \"\",\n        type: \"primary\",\n        size: \"small\",\n        onClick: $event => $setup.clickDelete(scope.row.id)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"删除\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]))]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])]), _createCommentVNode(\" 分页模块 \"), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_el_pagination, {\n    \"current-page\": _ctx.page,\n    \"onUpdate:currentPage\": _cache[0] || (_cache[0] = $event => _ctx.page = $event),\n    \"page-size\": _ctx.page_size,\n    \"onUpdate:pageSize\": _cache[1] || (_cache[1] = $event => _ctx.page_size = $event),\n    \"page-sizes\": [10, 20, 50, 100],\n    small: \"\",\n    background: \"\",\n    layout: \"total, sizes, prev, pager, next, jumper\",\n    total: _ctx.total,\n    onSizeChange: $setup.handleSizeChange,\n    onCurrentChange: $setup.handleCurrentChange\n  }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onSizeChange\", \"onCurrentChange\"])])])]), _createCommentVNode(\" 删除用户弹窗 \"), _createVNode(_component_deleteUserDialog, {\n    ref: \"deleteUserDialog\",\n    onFlushPage: $setup.getUserList\n  }, null, 8 /* PROPS */, [\"onFlushPage\"]), _createCommentVNode(\" 创建用户弹窗 \"), _createVNode(_component_addUserDialog, {\n    ref: \"addUserDialog\",\n    onFlushPage: $setup.getUserList\n  }, null, 8 /* PROPS */, [\"onFlushPage\"]), _createCommentVNode(\" 编辑用户弹窗 \"), _createVNode(_component_updateUserDialog, {\n    ref: \"updateUserDialog\",\n    onFlushPage: $setup.getUserList\n  }, null, 8 /* PROPS */, [\"onFlushPage\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","_createVNode","_component_el_button","type","onClick","$setup","clickAdduser","_component_el_table","data","_ctx","user_arr","stripe","_component_el_table_column","prop","label","default","_withCtx","scope","_toDisplayString","row","username","_hoisted_5","name_alias","role","_hoisted_6","_hoisted_7","formatter","$options","formatTime","fixed","width","id","_createBlock","link","size","disabled","$event","clickUpdateUser","clickDelete","_hoisted_8","_component_el_pagination","page","page_size","small","background","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","_component_deleteUserDialog","ref","onFlushPage","getUserList","_component_addUserDialog","_component_updateUserDialog"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\system\\user.vue"],"sourcesContent":["<template>\r\n    <div class=\"oderding\">\r\n        <div class=\"heading\">\r\n            <div>用户管理</div>\r\n\r\n            <!-- 表格上方功能按钮 -->\r\n            <div class=\"table-head\">\r\n                <el-button type=\"primary\" @click=\"clickAdduser\" >新建用户</el-button>\r\n            </div>\r\n            \r\n            <div>\r\n                <!-- 用户表格 -->\r\n                <div>          \r\n                    <el-table :data=\"user_arr\" stripe   style=\"width: 100% \" class=\"cell\">\r\n                        <el-table-column prop=\"username,name_alias\" label=\"用户名/姓名\" >\r\n                            <template #default=\"scope\">\r\n                                <div> {{ scope.row.username }} </div>\r\n                                <div style=\"font-size: 11px;\"> {{ scope.row.name_alias }} </div>\r\n                            </template>\r\n                            </el-table-column>\r\n                        <el-table-column prop=\"phone\" label=\"电话\" />\r\n                        <el-table-column prop=\"mail\" label=\"邮箱\" />\r\n                        <el-table-column prop=\"role\" label=\"角色\" >\r\n                            <template #default=\"scope\">\r\n                                <div v-if=\"scope.row.role === 'admin'\">  系统管理员 </div>\r\n                                <div v-else> 普通用户 </div>\r\n                            </template>\r\n                            </el-table-column>\r\n                        <el-table-column prop=\"CreatedAt\" :formatter=\"formatTime\" label=\"创建时间\"  />\r\n                        <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\r\n                            <template #default=\"scope\">\r\n                                <!-- 系统管理员不允许编辑与删除 -->\r\n                                <el-button link type=\"primary\" size=\"small\" v-if=\"scope.row.id === 1\" disabled>编辑</el-button>\r\n                                <el-button link type=\"primary\" size=\"small\" v-else @click=\"clickUpdateUser(scope.row)\" >编辑</el-button>\r\n                                <el-button link type=\"primary\" size=\"small\" v-if=\"scope.row.id === 1\" disabled>删除</el-button>\r\n                                <el-button link type=\"primary\" size=\"small\" v-else @click=\"clickDelete(scope.row.id)\" >删除</el-button>\r\n                            </template>\r\n                        </el-table-column>   \r\n                    </el-table>\r\n                </div>\r\n\r\n                <!-- 分页模块 -->\r\n                <div class=\"pagination\">\r\n                    <el-pagination\r\n                    v-model:current-page=\"page\"\r\n                    v-model:page-size=\"page_size\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    small\r\n                    background\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\"\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- 删除用户弹窗 -->\r\n        <deleteUserDialog ref=\"deleteUserDialog\" @flushPage=\"getUserList\"></deleteUserDialog>\r\n        <!-- 创建用户弹窗 -->\r\n        <addUserDialog ref=\"addUserDialog\" @flushPage=\"getUserList\"></addUserDialog>\r\n        <!-- 编辑用户弹窗 -->\r\n        <updateUserDialog ref=\"updateUserDialog\" @flushPage=\"getUserList\"></updateUserDialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { getCurrentInstance,onMounted, reactive,toRefs, ref  } from 'vue'\r\nimport deleteUserDialog from './components/deleteuser-dialog.vue'\r\nimport addUserDialog from './components/adduser-dialog.vue'\r\nimport updateUserDialog from './components/updateuser-dialog.vue'\r\nimport qs from 'qs'\r\n\r\nexport default {\r\n    components: {\r\n        deleteUserDialog,\r\n        addUserDialog,\r\n        updateUserDialog\r\n    },\r\n    methods: {\r\n        formatTime(row, column,cellValue){\r\n            return new Date(cellValue).toLocaleString()\r\n        }\r\n    },\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n        let deleteUserDialog = ref()\r\n        let addUserDialog = ref()\r\n        let updateUserDialog = ref()\r\n        const users = reactive(\r\n            {\r\n                user_arr: [],\r\n                page_size: 10,\r\n                page: 1,\r\n                total: 0\r\n            }r\n        )\r\n\r\n        onMounted(()=>{\r\n            getUserList()\r\n        })\r\n\r\n        // 查询用户列表\r\n        const getUserList = async()=> {\r\n            const query = qs.stringify({\r\n                page: users.page,\r\n                size: users.page_size\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取用户列表失败\", \"warning\").notify()\r\n                }\r\n                users.user_arr = rest.data.data\r\n                users.total = rest.data.total\r\n                users.page = rest.data.page\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify()\r\n                }   \r\n            }\r\n        }\r\n\r\n        // 更改每页展示条数后触发\r\n        function handleSizeChange(val) {\r\n            users.page_size = val\r\n            getUserList()\r\n        }\r\n\r\n        // 更改页码后触发\r\n        function handleCurrentChange(val) {\r\n            users.page = val\r\n            getUserList()\r\n        }\r\n\r\n        // 调用子组件userDialog中的deleteDialog，将用户ID传给子组件\r\n        const clickDelete = (userId) => {\r\n            deleteUserDialog.value.deleteDialog(userId)\r\n        }\r\n\r\n        // 调用子组件\r\n        const clickAdduser = () => {\r\n            addUserDialog.value.addUserDialog()\r\n        }\r\n\r\n        // 调用子组件\r\n        const clickUpdateUser = (user) => {\r\n            updateUserDialog.value.updateUserDialog(user)\r\n        }\r\n\r\n        return {\r\n            ...toRefs(users), \r\n            handleSizeChange, \r\n            handleCurrentChange, \r\n            clickDelete, \r\n            getUserList, \r\n            clickAdduser,\r\n            clickUpdateUser, \r\n            deleteUserDialog,\r\n            addUserDialog,\r\n            updateUserDialog \r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}