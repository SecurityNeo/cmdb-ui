{"ast":null,"code":"import { reactive, getCurrentInstance } from 'vue';\nexport default {\n  methods: {\n    deleteAndFlush() {\n      this.deleteUser();\n      // 触发父组件中的刷新页面函数\n      this.$emit('flushPage');\n    }\n  },\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const res = reactive({\n      centerDialogVisible: false,\n      userId: 0,\n      isLoading: false\n    });\n\n    //删除用户\n    const deleteUser = () => {\n      res.isLoading = true;\n      console.log(res.userId);\n      res.centerDialogVisible = false;\n      new proxy.$request(proxy.$urls.m().userdelete + \"?id=\" + res.userId).modedelete();\n      res.isLoading = false;\n    };\n\n    // 被父组件user.vue调用\n    function deleteDialog(userId) {\n      res.centerDialogVisible = true;\n      res.userId = userId;\n    }\n    return {\n      res,\n      deleteUser,\n      deleteDialog\n    };\n  }\n};","map":{"version":3,"names":["reactive","getCurrentInstance","methods","deleteAndFlush","deleteUser","$emit","setup","proxy","res","centerDialogVisible","userId","isLoading","console","log","$request","$urls","m","userdelete","modedelete","deleteDialog"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\system\\components\\user-dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n            v-model=\"res.centerDialogVisible\"\r\n            title=\"提示\"\r\n            width=\"30%\"\r\n            align-center\r\n            :close-on-click-modal=\"false\"\r\n            \r\n        >\r\n            <span>删除用户后该用户无法登陆本平台，此用户数据也将被清空，请谨慎操作！</span>\r\n            <template #footer>\r\n            <span >\r\n                <el-button @click=\"res.centerDialogVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"deleteAndFlush\" :loading=\"res.isLoading\">确认</el-button>\r\n            </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive, getCurrentInstance} from 'vue'\r\n\r\n\r\nexport default {\r\n    methods :{\r\n        deleteAndFlush() {\r\n            this.deleteUser()\r\n            // 触发父组件中的刷新页面函数\r\n            this.$emit('flushPage')\r\n        }\r\n    },\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n        const res = reactive({\r\n            centerDialogVisible: false,\r\n            userId: 0,\r\n            isLoading: false \r\n        })\r\n        \r\n        //删除用户\r\n        const deleteUser =() => {\r\n            res.isLoading = true\r\n            console.log(res.userId);\r\n            res.centerDialogVisible = false\r\n            new proxy.$request(proxy.$urls.m().userdelete + \"?id=\" + res.userId).modedelete()\r\n            res.isLoading = false\r\n            \r\n           \r\n        }\r\n\r\n        // 被父组件user.vue调用\r\n        function deleteDialog(userId) {\r\n            res.centerDialogVisible = true\r\n            res.userId = userId\r\n        }\r\n\r\n        return {res, deleteUser,deleteDialog}\r\n    }\r\n}\r\n</script>"],"mappings":"AAsBA,SAAQA,QAAQ,EAAEC,kBAAkB,QAAO,KAAI;AAG/C,eAAe;EACXC,OAAM,EAAG;IACLC,cAAcA,CAAA,EAAG;MACb,IAAI,CAACC,UAAU,CAAC;MAChB;MACA,IAAI,CAACC,KAAK,CAAC,WAAW;IAC1B;EACJ,CAAC;EACDC,KAAKA,CAAA,EAAG;IACJ,MAAM;MAACC;IAAK,IAAIN,kBAAkB,CAAC;IACnC,MAAMO,GAAE,GAAIR,QAAQ,CAAC;MACjBS,mBAAmB,EAAE,KAAK;MAC1BC,MAAM,EAAE,CAAC;MACTC,SAAS,EAAE;IACf,CAAC;;IAED;IACA,MAAMP,UAAS,GAAGA,CAAA,KAAM;MACpBI,GAAG,CAACG,SAAQ,GAAI,IAAG;MACnBC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACE,MAAM,CAAC;MACvBF,GAAG,CAACC,mBAAkB,GAAI,KAAI;MAC9B,IAAIF,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAACC,CAAC,CAAC,CAAC,CAACC,UAAS,GAAI,MAAK,GAAIT,GAAG,CAACE,MAAM,CAAC,CAACQ,UAAU,CAAC;MAChFV,GAAG,CAACG,SAAQ,GAAI,KAAI;IAGxB;;IAEA;IACA,SAASQ,YAAYA,CAACT,MAAM,EAAE;MAC1BF,GAAG,CAACC,mBAAkB,GAAI,IAAG;MAC7BD,GAAG,CAACE,MAAK,GAAIA,MAAK;IACtB;IAEA,OAAO;MAACF,GAAG;MAAEJ,UAAU;MAACe;IAAY;EACxC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}