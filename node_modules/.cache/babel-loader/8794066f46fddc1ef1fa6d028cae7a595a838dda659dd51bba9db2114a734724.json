{"ast":null,"code":"import { reactive, getCurrentInstance } from 'vue';\nexport default {\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const res = reactive({\n      centerDialogVisible: false,\n      networksId: 0,\n      isLoading: false\n    });\n\n    //删除服务器数据\n    const deleteServer = async () => {\n      res.isLoading = true;\n      const rest = await new proxy.$request(proxy.$urls.m().serverdelete + \"?id=\" + res.networksId).modedelete();\n      if (rest.data.code !== 200) {\n        new proxy.$tips(\"删除网络设备数据失败，稍后重试\", \"error\").notify();\n      }\n      res.centerDialogVisible = false;\n      proxy.$emit('flushPage');\n      res.isLoading = false;\n    };\n\n    // 被父组件调用\n    function deleteNetworksDialog(networksId) {\n      res.centerDialogVisible = true;\n      res.networksId = networksId;\n    }\n    return {\n      res,\n      deleteNetworks,\n      deleteNetworksDialog\n    };\n  }\n};","map":{"version":3,"names":["reactive","getCurrentInstance","setup","proxy","res","centerDialogVisible","networksId","isLoading","deleteServer","rest","$request","$urls","m","serverdelete","modedelete","data","code","$tips","notify","$emit","deleteNetworksDialog","deleteNetworks"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\resource\\networks\\components\\deletenetworks-dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n            v-model=\"res.centerDialogVisible\"\r\n            title=\"提示\"\r\n            width=\"30%\"\r\n            align-center\r\n            :close-on-click-modal=\"false\"\r\n            \r\n        >\r\n            <span>数据删除后不可恢复，确认要删除本条数据吗？</span>\r\n            <template #footer>\r\n            <span >\r\n                <el-button @click=\"res.centerDialogVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"deleteNetworks\" :loading=\"res.isLoading\">确认</el-button>\r\n            </span>\r\n            </template>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive, getCurrentInstance} from 'vue'\r\n\r\n\r\nexport default {\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n        const res = reactive({\r\n            centerDialogVisible: false,\r\n            networksId: 0,\r\n            isLoading: false \r\n        })\r\n        \r\n        //删除服务器数据\r\n        const deleteServer = async() => {\r\n            res.isLoading = true\r\n           \r\n            const rest = await new proxy.$request(proxy.$urls.m().serverdelete + \"?id=\" + res.networksId).modedelete()\r\n      \r\n            if (rest.data.code !== 200 ) {\r\n                new proxy.$tips(\"删除网络设备数据失败，稍后重试\", \"error\").notify()\r\n            } \r\n            res.centerDialogVisible = false\r\n            proxy.$emit('flushPage')\r\n            res.isLoading = false        \r\n           \r\n        }\r\n\r\n        // 被父组件调用\r\n        function deleteNetworksDialog(networksId) {\r\n            res.centerDialogVisible = true\r\n            res.networksId = networksId\r\n        }\r\n\r\n        return {res, deleteNetworks,deleteNetworksDialog}\r\n    }\r\n}\r\n</script>"],"mappings":"AAsBA,SAAQA,QAAQ,EAAEC,kBAAkB,QAAO,KAAI;AAG/C,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAM;MAACC;IAAK,IAAIF,kBAAkB,CAAC;IACnC,MAAMG,GAAE,GAAIJ,QAAQ,CAAC;MACjBK,mBAAmB,EAAE,KAAK;MAC1BC,UAAU,EAAE,CAAC;MACbC,SAAS,EAAE;IACf,CAAC;;IAED;IACA,MAAMC,YAAW,GAAI,MAAAA,CAAA,KAAW;MAC5BJ,GAAG,CAACG,SAAQ,GAAI,IAAG;MAEnB,MAAME,IAAG,GAAI,MAAM,IAAIN,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACQ,KAAK,CAACC,CAAC,CAAC,CAAC,CAACC,YAAW,GAAI,MAAK,GAAIT,GAAG,CAACE,UAAU,CAAC,CAACQ,UAAU,CAAC;MAEzG,IAAIL,IAAI,CAACM,IAAI,CAACC,IAAG,KAAM,GAAE,EAAI;QACzB,IAAIb,KAAK,CAACc,KAAK,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAACC,MAAM,CAAC;MACvD;MACAd,GAAG,CAACC,mBAAkB,GAAI,KAAI;MAC9BF,KAAK,CAACgB,KAAK,CAAC,WAAW;MACvBf,GAAG,CAACG,SAAQ,GAAI,KAAI;IAExB;;IAEA;IACA,SAASa,oBAAoBA,CAACd,UAAU,EAAE;MACtCF,GAAG,CAACC,mBAAkB,GAAI,IAAG;MAC7BD,GAAG,CAACE,UAAS,GAAIA,UAAS;IAC9B;IAEA,OAAO;MAACF,GAAG;MAAEiB,cAAc;MAACD;IAAoB;EACpD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}