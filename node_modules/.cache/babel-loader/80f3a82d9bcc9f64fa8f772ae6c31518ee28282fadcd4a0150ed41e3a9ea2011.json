{"ast":null,"code":"import { reactive, toRefs, onMounted } from 'vue';\nimport qs from 'qs';\nexport default {\n  setup() {\n    const server = reactive({\n      server_arr: [],\n      page_size: 10,\n      page: 1,\n      total: 0\n    });\n    onMounted(() => {\n      getServerList();\n    });\n    const getServerList = async () => {\n      const query = qs.stringify({\n        page: server.page,\n        size: server.page_size\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().serverlist + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取服务器列表失败\", \"warning\").notify();\n        }\n        server.server_arr = rest.data.data;\n        server.total = rest.data.total;\n        server.page = rest.data.page;\n      } catch (e) {\n        new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify();\n      }\n      console.log(server);\n    };\n    const clickDelete = () => {\n      console.log(\"delete\");\n    };\n    const clickUpdateServer = () => {\n      console.log(\"update\");\n    };\n    return {\n      ...toRefs(server),\n      clickDelete,\n      clickUpdateServer,\n      getServerList\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","onMounted","qs","setup","server","server_arr","page_size","page","total","getServerList","query","stringify","size","rest","proxy","$request","$urls","m","serverlist","modeget","data","code","$tips","notify","e","console","log","clickDelete","clickUpdateServer"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\resource\\server\\server.vue"],"sourcesContent":["<template>\r\n    <div class=\"oderding\">\r\n        <div class=\"heading\">\r\n            物理机管理\r\n        </div>\r\n\r\n        <!-- 表格上方功能按钮 -->\r\n        <div class=\"table-head\">\r\n            <el-button type=\"primary\" size=\"small\"  >新建服务器</el-button>\r\n        </div>\r\n\r\n        <div>\r\n            <!-- 物理机表格 -->\r\n            <div>          \r\n                <el-table :data=\"server_arr\" stripe   style=\"width: 100% \" class=\"cell\">\r\n                    <el-table-column prop=\"host_name\" label=\"主机名\"  />\r\n                    <el-table-column prop=\"hdm_ip\" label=\"HDM IP\" />\r\n                    <el-table-column prop=\"mgt_ip\" label=\"管理IP\" />\r\n                    <el-table-column prop=\"storage_ip\" label=\"存储IP\" />\r\n                    <el-table-column prop=\"location\" label=\"位置\" />\r\n                    <el-table-column prop=\"tag.name\" label=\"资源分组\" />\r\n                    <el-table-column prop=\"user.username\" label=\"责任人\" />\r\n                    <el-table-column prop=\"CreatedAt\" label=\"创建时间\"  />\r\n                    <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\r\n                        <template #default=\"scope\">\r\n                            <el-button link type=\"primary\" size=\"small\" @click=\"clickUpdateServer(scope.row)\" >编辑</el-button>\r\n                            <el-button link type=\"primary\" size=\"small\" @click=\"clickDelete(scope.row.id)\" >删除</el-button>\r\n                        </template>\r\n                    </el-table-column>   \r\n                </el-table>\r\n            </div>\r\n\r\n                <!-- 分页模块 -->\r\n                <div class=\"pagination\">\r\n                    <el-pagination\r\n                    v-model:current-page=\"page\"\r\n                    v-model:page-size=\"page_size\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    small\r\n                    background\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\"\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {reactive, toRefs, onMounted} from 'vue'\r\nimport qs from 'qs'\r\n\r\nexport default {\r\n    setup() {\r\n        const server = reactive({\r\n            server_arr: [],\r\n            page_size: 10,\r\n            page: 1,\r\n            total: 0\r\n        })\r\n\r\n        onMounted(()=>{\r\n            getServerList()\r\n        })\r\n\r\n\r\n        const getServerList = async()=> {\r\n            const query = qs.stringify({\r\n                page: server.page,\r\n                size: server.page_size\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().serverlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取服务器列表失败\", \"warning\").notify()\r\n                }\r\n                server.server_arr = rest.data.data\r\n                server.total = rest.data.total\r\n                server.page = rest.data.page\r\n                \r\n            } catch (e) {\r\n\r\n                new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify()\r\n            }\r\n\r\n            console.log(server);\r\n        }\r\n\r\n        const clickDelete = ()=> {\r\n            console.log(\"delete\");\r\n        }\r\n\r\n        const clickUpdateServer = ()=> {\r\n            console.log(\"update\");\r\n        }\r\n\r\n        return { ...toRefs(server), clickDelete, clickUpdateServer, getServerList}\r\n    }\r\n}\r\n\r\n</script>"],"mappings":"AAoDA,SAAQA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,KAAI;AAC9C,OAAOC,EAAC,MAAO,IAAG;AAElB,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIL,QAAQ,CAAC;MACpBM,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE;IACX,CAAC;IAEDP,SAAS,CAAC,MAAI;MACVQ,aAAa,CAAC;IAClB,CAAC;IAGD,MAAMA,aAAY,GAAI,MAAAA,CAAA,KAAU;MAC5B,MAAMC,KAAI,GAAIR,EAAE,CAACS,SAAS,CAAC;QACvBJ,IAAI,EAAEH,MAAM,CAACG,IAAI;QACjBK,IAAI,EAAER,MAAM,CAACE;MACjB,CAAC;MACD,IAAI;QACA,MAAMO,IAAG,GAAI,MAAM,IAAIC,KAAK,CAACC,QAAQ,CAACD,KAAK,CAACE,KAAK,CAACC,CAAC,CAAC,CAAC,CAACC,UAAS,GAAI,GAAE,GAAIR,KAAK,CAAC,CAACS,OAAO,CAAC;QAExF,IAAIN,IAAI,CAACO,IAAI,CAACC,IAAG,KAAM,GAAE,EAAI;UACzB,IAAIP,KAAK,CAACQ,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,CAACC,MAAM,CAAC;QACnD;QACAnB,MAAM,CAACC,UAAS,GAAIQ,IAAI,CAACO,IAAI,CAACA,IAAG;QACjChB,MAAM,CAACI,KAAI,GAAIK,IAAI,CAACO,IAAI,CAACZ,KAAI;QAC7BJ,MAAM,CAACG,IAAG,GAAIM,IAAI,CAACO,IAAI,CAACb,IAAG;MAE/B,EAAE,OAAOiB,CAAC,EAAE;QAER,IAAIV,KAAK,CAACQ,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC,CAACC,MAAM,CAAC;MACnD;MAEAE,OAAO,CAACC,GAAG,CAACtB,MAAM,CAAC;IACvB;IAEA,MAAMuB,WAAU,GAAIA,CAAA,KAAK;MACrBF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzB;IAEA,MAAME,iBAAgB,GAAIA,CAAA,KAAK;MAC3BH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzB;IAEA,OAAO;MAAE,GAAG1B,MAAM,CAACI,MAAM,CAAC;MAAEuB,WAAW;MAAEC,iBAAiB;MAAEnB;IAAa;EAC7E;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}