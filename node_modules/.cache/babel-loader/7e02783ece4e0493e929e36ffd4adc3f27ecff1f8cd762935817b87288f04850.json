{"ast":null,"code":"import { getCurrentInstance, onMounted, reactive, toRefs } from 'vue';\nimport Dialog from './components/user-dialog.vue';\nimport qs from 'qs';\nexport default {\n  components: {\n    Dialog\n  },\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const users = reactive({\n      user_arr: [],\n      page_size: 10,\n      page: 1,\n      total: 0,\n      centerDialogVisible: false\n    });\n    onMounted(() => {\n      getUserList();\n    });\n\n    // 查询用户列表\n    const getUserList = async () => {\n      const query = qs.stringify({\n        page: users.page,\n        size: users.page_size\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取用户列表失败\", \"warning\").notify();\n        }\n        users.user_arr = rest.data.data;\n        users.total = rest.data.total;\n        users.page = rest.data.page;\n      } catch (e) {\n        new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify();\n      }\n    };\n\n    // 更改每页展示条数后触发\n    function handleSizeChange(val) {\n      users.page_size = val;\n      getUserList();\n    }\n\n    // 更改页码后触发\n    function handleCurrentChange(val) {\n      users.page = val;\n      getUserList();\n    }\n    const clickDelete = userId => {\n      console.log(userId);\n    };\n    return {\n      ...toRefs(users),\n      handleSizeChange,\n      handleCurrentChange,\n      clickDelete\n    };\n  }\n};","map":{"version":3,"names":["getCurrentInstance","onMounted","reactive","toRefs","Dialog","qs","components","setup","proxy","users","user_arr","page_size","page","total","centerDialogVisible","getUserList","query","stringify","size","rest","$request","$urls","m","userlist","modeget","data","code","$tips","notify","e","handleSizeChange","val","handleCurrentChange","clickDelete","userId","console","log"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\system\\user.vue"],"sourcesContent":["<template>\r\n    <div class=\"oderding\">\r\n        <div class=\"heading\">\r\n            <div>用户管理</div>\r\n\r\n            <!-- 表格上方功能按钮 -->\r\n            <div class=\"table-head\">\r\n                <el-button type=\"primary\" size=\"small\" >新建用户</el-button>\r\n            </div>\r\n            \r\n            <div>\r\n                <!-- 用户表格 -->\r\n                <div>          \r\n                    <el-table :data=\"user_arr\" stripe   style=\"width: 100%\" class=\"cell\">\r\n                        <el-table-column prop=\"username\" label=\"用户名\"  />\r\n                        <el-table-column prop=\"phone\" label=\"电话\" />\r\n                        <el-table-column prop=\"mail\" label=\"邮箱\" />\r\n                        <el-table-column prop=\"role\" label=\"角色\" />\r\n                        <el-table-column prop=\"CreatedAt\" label=\"创建时间\"  />\r\n                        <el-table-column fixed=\"right\" label=\"操作\" width=\"120\">\r\n                            <template #default=\"scope\">\r\n                                <!-- 系统管理员不允许编辑与删除 -->\r\n                                <el-button link type=\"primary\" size=\"small\" v-if=\"scope.row.id === 1\" disabled>编辑</el-button>\r\n                                <el-button link type=\"primary\" size=\"small\" v-else >编辑</el-button>\r\n                                <el-button link type=\"primary\" size=\"small\" v-if=\"scope.row.id === 1\" disabled>删除</el-button>\r\n                                <el-button link type=\"primary\" size=\"small\" v-else @click=\"clickDelete(scope.row.id)\" >删除</el-button>\r\n\r\n                            </template>\r\n                        </el-table-column>   \r\n                    </el-table>\r\n                </div>\r\n\r\n                <!-- 分页模块 -->\r\n                <div class=\"pagination\">\r\n                    <el-pagination\r\n                    v-model:current-page=\"page\"\r\n                    v-model:page-size=\"page_size\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    small\r\n                    background\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\"\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- 删除用户弹窗 -->\r\n        <Dialog ref=\"user-dialog\"></Dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { getCurrentInstance,onMounted, reactive,toRefs  } from 'vue'\r\nimport Dialog from './components/user-dialog.vue'\r\nimport qs from 'qs'\r\n\r\nexport default {\r\n    components: {\r\n        Dialog\r\n    },\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n        const users = reactive(\r\n            {\r\n                user_arr: [],\r\n                page_size: 10,\r\n                page: 1,\r\n                total: 0,\r\n                centerDialogVisible: false\r\n            }\r\n        )\r\n\r\n        onMounted(()=>{\r\n            getUserList()\r\n        })\r\n\r\n        // 查询用户列表\r\n        const getUserList = async()=> {\r\n            const query = qs.stringify({\r\n                page: users.page,\r\n                size: users.page_size\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取用户列表失败\", \"warning\").notify()\r\n                }\r\n                users.user_arr = rest.data.data\r\n                users.total = rest.data.total\r\n                users.page = rest.data.page\r\n                \r\n            } catch (e) {\r\n\r\n                new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify()\r\n                }\r\n            }\r\n\r\n        // 更改每页展示条数后触发\r\n        function handleSizeChange(val) {\r\n            users.page_size = val\r\n            getUserList()\r\n        }\r\n\r\n        // 更改页码后触发\r\n        function handleCurrentChange(val) {\r\n            users.page = val\r\n            getUserList()\r\n        }\r\n\r\n        const clickDelete = (userId) => {\r\n            console.log(userId);\r\n        }\r\n\r\n        return {...toRefs(users), handleSizeChange, handleCurrentChange, clickDelete}\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAuDA,SAASA,kBAAkB,EAACC,SAAS,EAAEC,QAAQ,EAACC,MAAK,QAAU,KAAI;AACnE,OAAOC,MAAK,MAAO,8BAA6B;AAChD,OAAOC,EAAC,MAAO,IAAG;AAElB,eAAe;EACXC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,KAAKA,CAAA,EAAG;IACJ,MAAM;MAACC;IAAK,IAAIR,kBAAkB,CAAC;IACnC,MAAMS,KAAI,GAAIP,QAAQ,CAClB;MACIQ,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,mBAAmB,EAAE;IACzB,CACJ;IAEAb,SAAS,CAAC,MAAI;MACVc,WAAW,CAAC;IAChB,CAAC;;IAED;IACA,MAAMA,WAAU,GAAI,MAAAA,CAAA,KAAU;MAC1B,MAAMC,KAAI,GAAIX,EAAE,CAACY,SAAS,CAAC;QACvBL,IAAI,EAAEH,KAAK,CAACG,IAAI;QAChBM,IAAI,EAAET,KAAK,CAACE;MAChB,CAAC;MACD,IAAI;QACA,MAAMQ,IAAG,GAAI,MAAM,IAAIX,KAAK,CAACY,QAAQ,CAACZ,KAAK,CAACa,KAAK,CAACC,CAAC,CAAC,CAAC,CAACC,QAAO,GAAI,GAAE,GAAIP,KAAK,CAAC,CAACQ,OAAO,CAAC;QAEtF,IAAIL,IAAI,CAACM,IAAI,CAACC,IAAG,KAAM,GAAE,EAAI;UACzB,IAAIlB,KAAK,CAACmB,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC,CAACC,MAAM,CAAC;QAClD;QACAnB,KAAK,CAACC,QAAO,GAAIS,IAAI,CAACM,IAAI,CAACA,IAAG;QAC9BhB,KAAK,CAACI,KAAI,GAAIM,IAAI,CAACM,IAAI,CAACZ,KAAI;QAC5BJ,KAAK,CAACG,IAAG,GAAIO,IAAI,CAACM,IAAI,CAACb,IAAG;MAE9B,EAAE,OAAOiB,CAAC,EAAE;QAER,IAAIrB,KAAK,CAACmB,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC,CAACC,MAAM,CAAC;MAC/C;IACJ;;IAEJ;IACA,SAASE,gBAAgBA,CAACC,GAAG,EAAE;MAC3BtB,KAAK,CAACE,SAAQ,GAAIoB,GAAE;MACpBhB,WAAW,CAAC;IAChB;;IAEA;IACA,SAASiB,mBAAmBA,CAACD,GAAG,EAAE;MAC9BtB,KAAK,CAACG,IAAG,GAAImB,GAAE;MACfhB,WAAW,CAAC;IAChB;IAEA,MAAMkB,WAAU,GAAKC,MAAM,IAAK;MAC5BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACvB;IAEA,OAAO;MAAC,GAAG/B,MAAM,CAACM,KAAK,CAAC;MAAEqB,gBAAgB;MAAEE,mBAAmB;MAAEC;IAAW;EAChF;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}