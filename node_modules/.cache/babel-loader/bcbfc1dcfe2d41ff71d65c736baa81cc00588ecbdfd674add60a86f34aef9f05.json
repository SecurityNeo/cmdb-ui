{"ast":null,"code":"import { reactive, toRefs, getCurrentInstance, ref } from 'vue';\nimport qs from 'qs';\nexport default {\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const config = reactive({\n      centerDialogVisible: false,\n      isLoading: false\n    });\n    const addNetworksRef = ref();\n    const selectUserId = ref();\n    const selectTagId = ref();\n    const networks = reactive({\n      vendor: \"\",\n      product_name: \"\",\n      sn: \"\",\n      asset_number: \"\",\n      mgt_ip: \"\",\n      mgt_user_name: \"\",\n      mgt_pwd: \"\",\n      owner_id: null,\n      host_name: \"\",\n      tag_id: null,\n      location: \"\",\n      description: \"\"\n    });\n    const user = reactive({\n      user_arr: []\n    });\n    const tag = reactive({\n      tag_arr: []\n    });\n\n    // 查询用户列表\n    const getUserList = async () => {\n      const query = qs.stringify({\n        page: 1,\n        size: 1000\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取用户列表失败\", \"warning\").notify();\n        }\n        user.user_arr = rest.data.data;\n      } catch (e) {\n        if (e.code !== 401) {\n          new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify();\n        }\n      }\n    };\n\n    // 查询资源标签列表\n    const getTagList = async () => {\n      const query = qs.stringify({\n        page: 1,\n        size: 1000\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().tagList + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取资源标签列表失败\", \"warning\").notify();\n        }\n        tag.tag_arr = rest.data.data;\n      } catch (e) {\n        if (e.code !== 401) {\n          new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify();\n        }\n      }\n    };\n    const addNetworks = async () => {\n      const obj = {\n        vendor: networks.vendor,\n        product_name: networks.product_name,\n        sn: networks.sn,\n        asset_number: networks.asset_number,\n        mgt_ip: networks.mgt_ip,\n        mgt_user_name: networks.mgt_user_name,\n        mgt_pwd: networks.mgt_pwd,\n        owner_id: selectUserId.value,\n        host_name: networks.host_name,\n        tag_id: selectTagId.value,\n        location: networks.location,\n        description: networks.description\n      };\n      config.isLoading = true;\n      const rest = await new proxy.$request(proxy.$urls.m().networksadd, obj).modepost();\n      if (rest.data.code !== 200) {\n        new proxy.$tips(\"新建网络设备失败，稍后重试\", \"error\").notify();\n      }\n      config.isLoading = false;\n      config.centerDialogVisible = false;\n      proxy.$emit('flushPage');\n    };\n    const addNetworksDialog = () => {\n      getUserList(), getTagList();\n      config.centerDialogVisible = true;\n    };\n    return {\n      networks,\n      config,\n      user,\n      tag,\n      selectUserId,\n      selectTagId,\n      addNetworks,\n      addNetworksDialog,\n      addNetworksRef\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","getCurrentInstance","ref","qs","setup","proxy","config","centerDialogVisible","isLoading","addNetworksRef","selectUserId","selectTagId","networks","vendor","product_name","sn","asset_number","mgt_ip","mgt_user_name","mgt_pwd","owner_id","host_name","tag_id","location","description","user","user_arr","tag","tag_arr","getUserList","query","stringify","page","size","rest","$request","$urls","m","userlist","modeget","data","code","$tips","notify","e","getTagList","tagList","addNetworks","obj","value","networksadd","modepost","$emit","addNetworksDialog"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\resource\\networks\\components\\addnetworks-dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n            v-model=\"config.centerDialogVisible\"\r\n            title=\"新建网络设备\"\r\n            width=\"60%\"\r\n            align-center\r\n            :close-on-click-modal=\"false\"           \r\n        >\r\n\r\n            <div >\r\n                <el-form\r\n                    ref=\"addNetworksRef\"\r\n                    :model=\"networks\"\r\n                    :rules=\"rules\"\r\n                    label-width=\"120px\"\r\n                    :label-position=\"right\"\r\n                    status-icon\r\n                >\r\n                </el-form>\r\n                <div style=\"display: flex\" >\r\n                    <!-- 基础信息 -->\r\n                    <div style=\"width: 500px;\">\r\n                        <div class=\"input_block_title\" >网络设备基础信息</div>\r\n\r\n                        <div style=\"width: 400px;\">\r\n                            <el-form-item label=\"主机名\" prop=\"host_name\"  >\r\n                                <el-input v-model=\"networks.host_name\" clearable  placeholder=\"请输入主机名\"  />\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"厂商\" prop=\"vendor\"  >\r\n                                <el-input v-model=\"networks.vendor\" clearable   placeholder=\"请输入厂商名\"  />\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"型号\" prop=\"product_name\" >\r\n                                <el-input v-model=\"networks.product_name\" clearable  placeholder=\"请输入设备型号\"  />\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"序列号\" prop=\"sn\">\r\n                                <el-input v-model=\"networks.sn\" clearable   placeholder=\"请输入设备序列号\"  />\r\n                            </el-form-item>\r\n\r\n                            <el-form-item label=\"资产编号\" prop=\"asset_number\" >\r\n                                <el-input v-model=\"networks.asset_number\" clearable  placeholder=\"请输入设备资产编号\"  />\r\n                            </el-form-item>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- 网络及账号配置 -->\r\n                    <div style=\"width: 500px;\">\r\n                        <div class=\"input_block_title\">网络及账号配置</div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                管理地址\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"mgt_ip\" clearable class=\"inputflex\"  placeholder=\"请输设备管理IP地址\"  />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                管理用户名\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"mgt_user_name\" clearable class=\"inputflex\"  placeholder=\"请输入设备管理用户名\"  />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                管理用户密码\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"mgt_pwd\" clearable class=\"inputflex\"  type=\"password\" show-password placeholder=\"请输入设备管理用户密码\"  />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style=\"display: flex;\">\r\n\r\n                    <!-- 公共属性配置 -->\r\n                    <div>\r\n                        <div class=\"input_block_title\">公共属性</div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    责任人\r\n                                </div>\r\n                                <div>\r\n                                    <el-select v-model=\"selectUserId\" value-key=\"id\" placeholder=\"请选择责任人\">\r\n                                        <el-option\r\n                                            v-for=\"item in user.user_arr\"\r\n                                            :key=\"item.id\"\r\n                                            :label=\"item.name_alias\"\r\n                                            :value=\"item.id\"\r\n                                            >\r\n\r\n                                            <span style=\"float: left\">{{ item.username }}</span>\r\n                                            <span\r\n                                                style=\"float: right;color: var(--el-text-color-secondary);font-size: 13px;\"\r\n                                                >{{ item.name_alias }}</span>\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    资源标签\r\n                                </div>\r\n                                <div>\r\n                                    <el-select v-model=\"selectTagId\" value-key=\"id\" placeholder=\"请选择资源标签\">\r\n                                        <el-option\r\n                                            v-for=\"item in tag.tag_arr\"\r\n                                            :key=\"item.id\"\r\n                                            :label=\"item.name\"\r\n                                            :value=\"item.id\"\r\n                                            />\r\n                                    </el-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    位置\r\n                                </div>\r\n                                <div class=\"input_value\">\r\n                                    <el-input v-model=\"location\" autosize type=\"textarea\" clearable class=\"inputflex\"  placeholder=\"请输设备所在机柜位置\"  />\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    备注信息\r\n                                </div>\r\n                                <div class=\"input_value\">\r\n                                    <el-input v-model=\"description\" autosize type=\"textarea\" clearable class=\"inputflex\"  placeholder=\"请输入设备备注信息\"  />\r\n                                </div>\r\n                            </div>\r\n                        </div>       \r\n                    </div>\r\n                </div>\r\n\r\n                <!-- 表格下方功能按钮 -->\r\n                <div style=\"float: right; margin-bottom: 40px; margin-right: 72px;margin-top: 20px;\">\r\n                    <el-button @click=\"config.centerDialogVisible = false\">取消</el-button>\r\n                    <el-button type=\"primary\" :loading=\"config.isLoading\" @click=\"addNetworks\" >确认</el-button>\r\n                </div>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs, getCurrentInstance, ref } from 'vue'\r\nimport qs from 'qs'\r\n\r\nexport default ({\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n\r\n        const config = reactive({\r\n            centerDialogVisible: false,\r\n            isLoading: false\r\n        })\r\n\r\n        const addNetworksRef = ref()\r\n\r\n        const selectUserId = ref()\r\n        const selectTagId = ref()\r\n        const networks = reactive({\r\n            vendor: \"\",\r\n            product_name: \"\",\r\n            sn: \"\",\r\n            asset_number: \"\",\r\n            mgt_ip: \"\",\r\n            mgt_user_name: \"\",\r\n            mgt_pwd: \"\",\r\n            owner_id: null,\r\n            host_name: \"\",\r\n            tag_id: null,\r\n            location: \"\",\r\n            description: \"\"\r\n\r\n        })\r\n\r\n        const user = reactive({\r\n            user_arr: []\r\n        })\r\n        const tag = reactive({\r\n            tag_arr: []\r\n        })\r\n\r\n\r\n        // 查询用户列表\r\n        const getUserList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 1000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取用户列表失败\", \"warning\").notify()\r\n                }\r\n                user.user_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify() \r\n                }   \r\n            }\r\n        }\r\n        \r\n        // 查询资源标签列表\r\n        const getTagList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 1000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().tagList + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取资源标签列表失败\", \"warning\").notify()\r\n                }\r\n                tag.tag_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify()\r\n                }   \r\n            }\r\n        }\r\n\r\n\r\n        const addNetworks  = async() => {\r\n            const obj = {\r\n                vendor: networks.vendor,\r\n                product_name: networks.product_name,\r\n                sn: networks.sn,\r\n                asset_number: networks.asset_number,\r\n                mgt_ip: networks.mgt_ip,\r\n                mgt_user_name: networks.mgt_user_name,\r\n                mgt_pwd: networks.mgt_pwd,\r\n                owner_id: selectUserId.value,\r\n                host_name: networks.host_name,\r\n                tag_id: selectTagId.value,\r\n                location: networks.location,\r\n                description: networks.description\r\n            }\r\n\r\n            config.isLoading = true\r\n            const rest = await new proxy.$request(proxy.$urls.m().networksadd, obj).modepost()\r\n            if (rest.data.code !== 200) {\r\n                new proxy.$tips(\"新建网络设备失败，稍后重试\", \"error\").notify()\r\n            }\r\n            config.isLoading = false\r\n            config.centerDialogVisible = false\r\n            proxy.$emit('flushPage')\r\n\r\n        }\r\n\r\n        const addNetworksDialog = () => {\r\n            getUserList(),\r\n            getTagList()\r\n            config.centerDialogVisible = true\r\n        }\r\n\r\n        return {\r\n            networks,\r\n            config,\r\n            user,\r\n            tag,\r\n            selectUserId,\r\n            selectTagId,\r\n            addNetworks,\r\n            addNetworksDialog,\r\n            addNetworksRef\r\n        }\r\n    }\r\n    \r\n})\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}