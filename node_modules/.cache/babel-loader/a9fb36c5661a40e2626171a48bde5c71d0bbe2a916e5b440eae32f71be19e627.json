{"ast":null,"code":"export default {\n  setup() {\n    const user = reactive({\n      id: 0,\n      account: \"\",\n      name_alias: \"\",\n      mail: \"\",\n      phone: \"\"\n    });\n    const config = reactive({\n      centerDialogVisible: false,\n      isLoading: false\n    });\n    const {\n      proxy\n    } = getCurrentInstance();\n    const updateUser = async () => {\n      const obj = {\n        id: user.id,\n        name_alias: user.name_alias,\n        mail: user.mail,\n        phone: user.phone\n      };\n      config.isLoading = true;\n      const rest = await new proxy.$request(proxy.$urls.m().userupdate, obj).modepost();\n      if (rest.data.code !== 200) {\n        new proxy.$tips(\"更新用户失败，稍后重试\", \"error\").notify();\n      }\n      config.isLoading = false;\n      config.centerDialogVisible = false;\n      proxy.$emit('flushPage');\n    };\n\n    // 被父组件user.vue调用\n    function updateUserDialog(userDetail) {\n      console.log(userDetail);\n    }\n    return {\n      updateUser,\n      updateUserDialog\n    };\n  }\n};","map":{"version":3,"names":["setup","user","reactive","id","account","name_alias","mail","phone","config","centerDialogVisible","isLoading","proxy","getCurrentInstance","updateUser","obj","rest","$request","$urls","m","userupdate","modepost","data","code","$tips","notify","$emit","updateUserDialog","userDetail","console","log"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\system\\components\\updateuser-dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n            v-model=config.centerDialogVisible\r\n            title=\"新建用户\"\r\n            width=\"30%\"\r\n            align-center\r\n            :close-on-click-modal=\"false\"            \r\n        >\r\n        <div>\r\n            <div class=\"input-float \">\r\n                <div class=\"input_key\">\r\n                    用户名\r\n                </div>\r\n                <div >\r\n                    <span>\r\n                        {{account}}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"input-float \">\r\n                <div class=\"input_key\">\r\n                    姓名\r\n                </div>\r\n                <div class=\"input_value\">\r\n                    <el-input v-model=\"name_alias\" clearable class=\"inputflex\"  placeholder=\"请输入姓名\"  />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"input-float \">\r\n                <div class=\"input_key\">\r\n                    电子邮箱\r\n                </div>\r\n                <div class=\"input_value\">\r\n                    <el-input v-model=\"mail\" clearable class=\"inputflex\"  placeholder=\"请输入电子邮箱\"  />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"input-float \">\r\n                <div class=\"input_key\">\r\n                    电话号码\r\n                </div>\r\n                <div class=\"input_value\">\r\n                    <el-input v-model=\"phone\" clearable class=\"inputflex\"  placeholder=\"请输入电话号码\"  />\r\n                </div>\r\n            </div>\r\n\r\n            \r\n            <div style=\"float: right; margin-bottom: 40px; margin-right: 72px;margin-top: 20px;\">\r\n                <el-button @click=\"config.centerDialogVisible = false\">取消</el-button>\r\n                <el-button type=\"primary\" :loading=\"config.isLoading\" @click=\"updateUser\" >确认</el-button>\r\n            </div>\r\n                      \r\n\r\n        </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    setup() {\r\n        const user = reactive({\r\n            id: 0,\r\n            account: \"\",\r\n            name_alias: \"\",\r\n            mail: \"\",\r\n            phone: \"\"\r\n        })\r\n\r\n        const config = reactive({\r\n            centerDialogVisible: false,\r\n            isLoading: false\r\n        })\r\n\r\n        const {proxy} = getCurrentInstance()\r\n        const updateUser = async() => {\r\n            const obj = {\r\n                id: user.id,\r\n                name_alias: user.name_alias,\r\n                mail: user.mail,\r\n                phone: user.phone,\r\n            }\r\n            config.isLoading = true\r\n            const rest = await new proxy.$request(proxy.$urls.m().userupdate, obj).modepost()\r\n            if (rest.data.code !== 200) {\r\n                new proxy.$tips(\"更新用户失败，稍后重试\", \"error\").notify()\r\n            }\r\n            config.isLoading = false\r\n            config.centerDialogVisible = false\r\n            proxy.$emit('flushPage')\r\n        }\r\n\r\n        // 被父组件user.vue调用\r\n        function updateUserDialog(userDetail) {\r\n            console.log(userDetail);\r\n        }\r\n\r\n        return {updateUser,updateUserDialog}\r\n    }\r\n}\r\n\r\n</script>"],"mappings":"AA6DA,eAAe;EACXA,KAAKA,CAAA,EAAG;IACJ,MAAMC,IAAG,GAAIC,QAAQ,CAAC;MAClBC,EAAE,EAAE,CAAC;MACLC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE;IACX,CAAC;IAED,MAAMC,MAAK,GAAIN,QAAQ,CAAC;MACpBO,mBAAmB,EAAE,KAAK;MAC1BC,SAAS,EAAE;IACf,CAAC;IAED,MAAM;MAACC;IAAK,IAAIC,kBAAkB,CAAC;IACnC,MAAMC,UAAS,GAAI,MAAAA,CAAA,KAAW;MAC1B,MAAMC,GAAE,GAAI;QACRX,EAAE,EAAEF,IAAI,CAACE,EAAE;QACXE,UAAU,EAAEJ,IAAI,CAACI,UAAU;QAC3BC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfC,KAAK,EAAEN,IAAI,CAACM;MAChB;MACAC,MAAM,CAACE,SAAQ,GAAI,IAAG;MACtB,MAAMK,IAAG,GAAI,MAAM,IAAIJ,KAAK,CAACK,QAAQ,CAACL,KAAK,CAACM,KAAK,CAACC,CAAC,CAAC,CAAC,CAACC,UAAU,EAAEL,GAAG,CAAC,CAACM,QAAQ,CAAC;MAChF,IAAIL,IAAI,CAACM,IAAI,CAACC,IAAG,KAAM,GAAG,EAAE;QACxB,IAAIX,KAAK,CAACY,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC,CAACC,MAAM,CAAC;MACnD;MACAhB,MAAM,CAACE,SAAQ,GAAI,KAAI;MACvBF,MAAM,CAACC,mBAAkB,GAAI,KAAI;MACjCE,KAAK,CAACc,KAAK,CAAC,WAAW;IAC3B;;IAEA;IACA,SAASC,gBAAgBA,CAACC,UAAU,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IAC3B;IAEA,OAAO;MAACd,UAAU;MAACa;IAAgB;EACvC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}