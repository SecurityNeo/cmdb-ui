{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, toRefs, getCurrentInstance, onMounted, onUnmounted } from \"vue\";\nimport { Base64 } from 'js-base64';\nimport { useRouter } from 'vue-router';\nexport default {\n  setup() {\n    const router = useRouter();\n    const {\n      proxy\n    } = getCurrentInstance();\n    const user = reactive({\n      account: '',\n      password: '',\n      isLoading: false\n    });\n\n    // 实现按下键盘回车触发login\n    // 键盘事件：keyDown（键盘按键按下时触发）\n\n    const keyDown = e => {\n      // 13 为控制键键码对应的Enter,108为数字键盘对应的Enter。\n      if (e.keyCode == 13 || e.keyCode == 108) {\n        login();\n      }\n    };\n    onMounted(() => {\n      window.addEventListener('keydown', keyDown);\n    });\n    onUnmounted(() => {\n      window.removeEventListener('keydown', keyDown, false);\n    });\n    const login = async () => {\n      user.isLoading = true;\n      const obj = {\n        username: user.account,\n        password: Base64.encode(user.password)\n      };\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().login, obj).modepost();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"用户名或密码错误,请重新输入\", \"warning\").notify();\n        } else {\n          // 保存token至本地缓存\n          localStorage.setItem('token', rest.data.data.token);\n          // 保存用户角色信息至本地缓存\n          localStorage.setItem('role', rest.data.data.role);\n          // 页面跳转至index页面\n          router.push({\n            name: 'index'\n          });\n        }\n        user.isLoading = false;\n      } catch (e) {\n        new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify();\n        user.isLoading = false;\n      }\n    };\n    return {\n      ...toRefs(user),\n      login,\n      keyDown\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","getCurrentInstance","onMounted","onUnmounted","Base64","useRouter","setup","router","proxy","user","account","password","isLoading","keyDown","e","keyCode","login","window","addEventListener","removeEventListener","obj","username","encode","rest","$request","$urls","m","modepost","data","code","$tips","notify","localStorage","setItem","token","role","push","name"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\login\\login.vue"],"sourcesContent":["<template>\r\n    <div id='backcont'>  \r\n        <div id=\"gifcont\">\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"meituan-content\">\r\n\r\n        <div class=\"login-content\">\r\n        \r\n            <div class=\"login-title \">\r\n                登录         \r\n                <div class=\"login-user\">\r\n                    <p class=\"login-user-p\">\r\n                        <el-input v-model=\"account\" clearable class=\"inputflex\"  placeholder=\"用户名\"  />\r\n                    </p>\r\n                </div>\r\n                <div class=\"login-user\">\r\n                    <p class=\"login-user-p\">\r\n                        <el-input v-model=\"password\" clearable class=\"inputflex\" type=\"password\" placeholder=\"密码\" show-password />\r\n                    </p>\r\n                </div>\r\n\r\n                <p>\r\n                    <el-button type=\"primary\" @click=\"login\" @keydown.enter=\"keyDown()\" :loading=\"isLoading\" class=\"login-botton\">登录</el-button>\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { reactive, toRefs, getCurrentInstance,onMounted,onUnmounted } from \"vue\"\r\nimport { Base64 } from 'js-base64'\r\nimport {useRouter} from 'vue-router'\r\n\r\n\r\nexport default {\r\n    setup(){\r\n        const router = useRouter()\r\n        const {proxy} = getCurrentInstance()\r\n        const user = reactive({\r\n            account: '',\r\n            password: '',\r\n            isLoading: false\r\n        })\r\n        \r\n        // 实现按下键盘回车触发login\r\n        // 键盘事件：keyDown（键盘按键按下时触发）\r\n        \r\n        const keyDown = (e) => {\r\n            // 13 为控制键键码对应的Enter,108为数字键盘对应的Enter。\r\n            if (e.keyCode == 13 || e.keyCode == 108) {\r\n                login();\r\n            }\r\n        }     \r\n        onMounted(() => {\r\n            window.addEventListener('keydown', keyDown);\r\n        });\r\n        onUnmounted(() => {\r\n            window.removeEventListener('keydown', keyDown, false);\r\n        });\r\n\r\n        const login = async()=> {\r\n            user.isLoading = true\r\n            const obj = {\r\n                username: user.account,\r\n                password: Base64.encode(user.password)\r\n            }\r\n\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().login, obj).modepost()\r\n\r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"用户名或密码错误,请重新输入\", \"warning\").notify()\r\n                } else {\r\n                    // 保存token至本地缓存\r\n                    localStorage.setItem('token',rest.data.data.token)\r\n                    // 保存用户角色信息至本地缓存\r\n                    localStorage.setItem('role',rest.data.data.role)\r\n                    // 页面跳转至index页面\r\n                    router.push({name:'index'})\r\n                }\r\n                user.isLoading = false\r\n            } catch (e) {\r\n                new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify()\r\n                user.isLoading = false\r\n            }\r\n            \r\n        }\r\n\r\n        return { ...toRefs(user), login, keyDown }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":";AAmCA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,kBAAkB,EAACC,SAAS,EAACC,WAAU,QAAS,KAAI;AAC/E,SAASC,MAAK,QAAS,WAAU;AACjC,SAAQC,SAAS,QAAO,YAAW;AAGnC,eAAe;EACXC,KAAKA,CAAA,EAAE;IACH,MAAMC,MAAK,GAAIF,SAAS,CAAC;IACzB,MAAM;MAACG;IAAK,IAAIP,kBAAkB,CAAC;IACnC,MAAMQ,IAAG,GAAIV,QAAQ,CAAC;MAClBW,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACf,CAAC;;IAED;IACA;;IAEA,MAAMC,OAAM,GAAKC,CAAC,IAAK;MACnB;MACA,IAAIA,CAAC,CAACC,OAAM,IAAK,EAAC,IAAKD,CAAC,CAACC,OAAM,IAAK,GAAG,EAAE;QACrCC,KAAK,CAAC,CAAC;MACX;IACJ;IACAd,SAAS,CAAC,MAAM;MACZe,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEL,OAAO,CAAC;IAC/C,CAAC,CAAC;IACFV,WAAW,CAAC,MAAM;MACdc,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEN,OAAO,EAAE,KAAK,CAAC;IACzD,CAAC,CAAC;IAEF,MAAMG,KAAI,GAAI,MAAAA,CAAA,KAAU;MACpBP,IAAI,CAACG,SAAQ,GAAI,IAAG;MACpB,MAAMQ,GAAE,GAAI;QACRC,QAAQ,EAAEZ,IAAI,CAACC,OAAO;QACtBC,QAAQ,EAAEP,MAAM,CAACkB,MAAM,CAACb,IAAI,CAACE,QAAQ;MACzC;MAEA,IAAI;QACA,MAAMY,IAAG,GAAI,MAAM,IAAIf,KAAK,CAACgB,QAAQ,CAAChB,KAAK,CAACiB,KAAK,CAACC,CAAC,CAAC,CAAC,CAACV,KAAK,EAAEI,GAAG,CAAC,CAACO,QAAQ,CAAC;QAE3E,IAAIJ,IAAI,CAACK,IAAI,CAACC,IAAG,KAAM,GAAE,EAAI;UACzB,IAAIrB,KAAK,CAACsB,KAAK,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAACC,MAAM,CAAC;QACxD,OAAO;UACH;UACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACV,IAAI,CAACK,IAAI,CAACA,IAAI,CAACM,KAAK;UACjD;UACAF,YAAY,CAACC,OAAO,CAAC,MAAM,EAACV,IAAI,CAACK,IAAI,CAACA,IAAI,CAACO,IAAI;UAC/C;UACA5B,MAAM,CAAC6B,IAAI,CAAC;YAACC,IAAI,EAAC;UAAO,CAAC;QAC9B;QACA5B,IAAI,CAACG,SAAQ,GAAI,KAAI;MACzB,EAAE,OAAOE,CAAC,EAAE;QACR,IAAIN,KAAK,CAACsB,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC,CAACC,MAAM,CAAC;QAC/CtB,IAAI,CAACG,SAAQ,GAAI,KAAI;MACzB;IAEJ;IAEA,OAAO;MAAE,GAAGZ,MAAM,CAACS,IAAI,CAAC;MAAEO,KAAK;MAAEH;IAAQ;EAC7C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}