{"ast":null,"code":"import { reactive, toRefs, getCurrentInstance } from \"vue\";\nimport { Base64 } from 'js-base64';\nimport { ElMessage } from \"element-plus\";\nexport default {\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const user = reactive({\n      account: '',\n      password: ''\n    });\n    const login = async () => {\n      const obj = {\n        username: user.account,\n        password: Base64.encode(user.password)\n      };\n      const rest = await new proxy.$request(proxy.$urls.m().login, obj).modeput();\n      console.log(rest);\n      ElMessage(rest.data.message);\n    };\n    return {\n      ...toRefs(user),\n      login\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","getCurrentInstance","Base64","ElMessage","setup","proxy","user","account","password","login","obj","username","encode","rest","$request","$urls","m","modeput","console","log","data","message"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\login\\login.vue"],"sourcesContent":["<template>\r\n    <div id='backcont'>  \r\n        <div id=\"gifcont\">\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"meituan-content\">\r\n\r\n        <div class=\"login-content\">\r\n        \r\n            <div class=\"login-title \">\r\n                登录            \r\n                <div class=\"login-user\">\r\n                    <p class=\"login-user-p\">\r\n                        <el-input v-model=\"account\" clearable  class=\"inputflex\"  placeholder=\"用户名\" />\r\n                    </p>\r\n                </div>\r\n                <div class=\"login-user\">\r\n                    <p class=\"login-user-p\">\r\n                        <el-input v-model=\"password\" clearable class=\"inputflex\" type=\"password\" placeholder=\"密码\" show-password />\r\n                    </p>\r\n                </div>\r\n\r\n                <p>\r\n                    <el-button type=\"primary\" @click=\"login\" class=\"login-botton\">登录</el-button>\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { reactive, toRefs, getCurrentInstance } from \"vue\"\r\nimport { Base64 } from 'js-base64'\r\nimport { ElMessage } from \"element-plus\"\r\n\r\nexport default {\r\n    setup(){\r\n        const {proxy} = getCurrentInstance()\r\n        const user = reactive({\r\n            account: '',\r\n            password: ''\r\n        })\r\n        \r\n        const login = async()=> {\r\n            const obj = {\r\n                username: user.account,\r\n                password: Base64.encode(user.password)\r\n            }\r\n            const rest = await new proxy.$request(proxy.$urls.m().login, obj).modeput()\r\n            console.log(rest)\r\n            ElMessage(rest.data.message)\r\n        }\r\n\r\n        return { ...toRefs(user), login }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAmCA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,kBAAiB,QAAS,KAAI;AACzD,SAASC,MAAK,QAAS,WAAU;AACjC,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACXC,KAAKA,CAAA,EAAE;IACH,MAAM;MAACC;IAAK,IAAIJ,kBAAkB,CAAC;IACnC,MAAMK,IAAG,GAAIP,QAAQ,CAAC;MAClBQ,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACd,CAAC;IAED,MAAMC,KAAI,GAAI,MAAAA,CAAA,KAAU;MACpB,MAAMC,GAAE,GAAI;QACRC,QAAQ,EAAEL,IAAI,CAACC,OAAO;QACtBC,QAAQ,EAAEN,MAAM,CAACU,MAAM,CAACN,IAAI,CAACE,QAAQ;MACzC;MACA,MAAMK,IAAG,GAAI,MAAM,IAAIR,KAAK,CAACS,QAAQ,CAACT,KAAK,CAACU,KAAK,CAACC,CAAC,CAAC,CAAC,CAACP,KAAK,EAAEC,GAAG,CAAC,CAACO,OAAO,CAAC;MAC1EC,OAAO,CAACC,GAAG,CAACN,IAAI;MAChBV,SAAS,CAACU,IAAI,CAACO,IAAI,CAACC,OAAO;IAC/B;IAEA,OAAO;MAAE,GAAGrB,MAAM,CAACM,IAAI,CAAC;MAAEG;IAAM;EACpC;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}