{"ast":null,"code":"import { reactive, toRefs, onMounted, getCurrentInstance, ref } from 'vue';\nimport addServerDialog from './components/addserver-dialog.vue';\nimport updateServerDialog from './components/updateserver-dialog.vue';\nimport deleteServerDialog from './components/deleteserver-dialog.vue';\nimport qs from 'qs';\nexport default {\n  components: {\n    addServerDialog,\n    updateServerDialog,\n    deleteServerDialog\n  },\n  setup() {\n    const server = reactive({\n      server_arr: [],\n      page_size: 10,\n      page: 1,\n      total: 0\n    });\n    const addServerDialog = ref();\n    const updateServerDialog = ref();\n    const deleteServerDialog = ref();\n    onMounted(() => {\n      getServerList();\n    });\n    const {\n      proxy\n    } = getCurrentInstance();\n\n    // 查询服务器列表\n    const getServerList = async () => {\n      const query = qs.stringify({\n        page: server.page,\n        size: server.page_size\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().serverlist + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取服务器列表失败\", \"warning\").notify();\n        }\n        server.server_arr = rest.data.data;\n        server.total = rest.data.total;\n        server.page = rest.data.page;\n      } catch (e) {\n        new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify();\n      }\n    };\n\n    // 更改每页展示条数后触发\n    function handleSizeChange(val) {\n      server.page_size = val;\n      getServerList();\n    }\n\n    // 更改页码后触发\n    function handleCurrentChange(val) {\n      server.page = val;\n      getServerList();\n    }\n\n    // 调用子组件\n    const clickAddServer = () => {\n      addServerDialog.value.addServerDialog();\n    };\n\n    // 调用子组件\n    const clickDelete = serverId => {\n      deleteServerDialog.value.deleteServerDialog(serverId);\n    };\n\n    // 调用子组件\n    const clickUpdateServer = val => {\n      updateServerDialog.value.updateServerDialog(val);\n    };\n    return {\n      ...toRefs(server),\n      clickDelete,\n      clickUpdateServer,\n      clickAddServer,\n      getServerList,\n      handleSizeChange,\n      handleCurrentChange,\n      addServerDialog,\n      updateServerDialog,\n      deleteServerDialog\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","onMounted","getCurrentInstance","ref","addServerDialog","updateServerDialog","deleteServerDialog","qs","components","setup","server","server_arr","page_size","page","total","getServerList","proxy","query","stringify","size","rest","$request","$urls","m","serverlist","modeget","data","code","$tips","notify","e","handleSizeChange","val","handleCurrentChange","clickAddServer","value","clickDelete","serverId","clickUpdateServer"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\resource\\server\\server.vue"],"sourcesContent":["<template>\r\n    <div class=\"oderding\">\r\n        <div class=\"heading\">\r\n            <div>物理机管理</div>\r\n\r\n            <!-- 表格上方功能按钮 -->\r\n            <div class=\"table-head\">\r\n                <el-button type=\"primary\" size=\"small\" @click=\"clickAddServer\" >新建服务器</el-button>\r\n            </div>\r\n\r\n            <div>\r\n                <!-- 物理机表格 -->\r\n                <div>          \r\n                    <el-table :data=\"server_arr\" stripe   style=\"width: 100% \" class=\"cell\">\r\n                        <el-table-column prop=\"host_name\" label=\"主机名\"  />\r\n                        <el-table-column prop=\"sn\" label=\"序列号\"  />\r\n                        <el-table-column prop=\"asset_number\" label=\"资产标签\"  />\r\n                        <el-table-column prop=\"location\" label=\"位置\" />\r\n                        <el-table-column prop=\"hdm_ip,mgt_ip,storage_ip\" label=\"网络配置\"  140px>\r\n                            <template #default=\"scope\">\r\n                                <div> HDM   IP: {{ scope.row.hdm_ip }} </div>\r\n                                <div> 管理网IP：{{ scope.row.mgt_ip }} </div>\r\n                                <div> 存储网IP：{{ scope.row.storage_ip }} </div>\r\n                            </template>\r\n                        </el-table-column>  \r\n                        <el-table-column prop=\"tag.name\" label=\"资源分组\" />\r\n                        <el-table-column prop=\"user.username\" label=\"责任人\" width=\"100px\"/>\r\n                        <el-table-column prop=\"hardware_cpu,hardware_mem,hardware_storage\" label=\"硬件信息\" >\r\n                            <template #default=\"scope\">\r\n                                <div> CPU: {{ scope.row.hardware_cpu }} 核 </div>\r\n                                <div> 内存：{{ scope.row.hardware_mem }} G </div>\r\n                                <div> 硬盘：{{ scope.row.hardware_storage }} </div>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column fixed=\"right\" label=\"操作\" width=\"100\">\r\n                            <template #default=\"scope\">\r\n                                <el-button link type=\"primary\" size=\"small\" @click=\"clickUpdateServer(scope.row)\" >编辑</el-button>\r\n                                <el-button link type=\"primary\" size=\"small\" @click=\"clickDelete(scope.row.id)\" >删除</el-button>\r\n                            </template>\r\n                        </el-table-column>   \r\n                    </el-table>\r\n                </div>\r\n\r\n                <!-- 分页模块 -->\r\n                <div class=\"pagination\">\r\n                    <el-pagination\r\n                    v-model:current-page=\"page\"\r\n                    v-model:page-size=\"page_size\"\r\n                    :page-sizes=\"[10, 20, 50, 100]\"\r\n                    small\r\n                    background\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\"\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 创建服务器弹窗 -->\r\n        <addServerDialog ref=\"addServerDialog\" @flushPage=\"getServerList\"></addServerDialog>\r\n        <!-- 编辑服务器弹窗 -->\r\n        <updateServerDialog ref=\"updateServerDialog\" @flushPage=\"getServerList\" ></updateServerDialog>\r\n        <!-- 删除服务器弹窗 -->\r\n        <deleteServerDialog ref=\"deleteServerDialog\" @flushPage=\"getServerList\"></deleteServerDialog>\r\n\r\n    </div>    \r\n</template>\r\n\r\n<script>\r\nimport {reactive, toRefs, onMounted, getCurrentInstance, ref} from 'vue'\r\nimport addServerDialog from './components/addserver-dialog.vue'\r\nimport updateServerDialog from './components/updateserver-dialog.vue'\r\nimport deleteServerDialog from './components/deleteserver-dialog.vue'\r\nimport qs from 'qs'\r\n\r\nexport default {\r\n    components: {\r\n        addServerDialog,\r\n        updateServerDialog,\r\n        deleteServerDialog\r\n    },\r\n    setup() {\r\n        const server = reactive({\r\n            server_arr: [],\r\n            page_size: 10,\r\n            page: 1,\r\n            total: 0\r\n        })\r\n\r\n        const addServerDialog = ref()\r\n        const updateServerDialog = ref()\r\n        const deleteServerDialog = ref()\r\n        onMounted(()=>{\r\n            getServerList()\r\n        })\r\n\r\n        const {proxy} = getCurrentInstance()\r\n\r\n        // 查询服务器列表\r\n        const getServerList = async()=> {\r\n            const query = qs.stringify({\r\n                page: server.page,\r\n                size: server.page_size\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().serverlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取服务器列表失败\", \"warning\").notify()\r\n                }\r\n                server.server_arr = rest.data.data\r\n                server.total = rest.data.total\r\n                server.page = rest.data.page\r\n                \r\n            } catch (e) {\r\n\r\n                new proxy.$tips(\"服务未就绪，请稍后重试\", \"error\").notify()\r\n            }\r\n\r\n        }\r\n\r\n\r\n        // 更改每页展示条数后触发\r\n        function handleSizeChange(val) {\r\n            server.page_size = val\r\n            getServerList()\r\n        }\r\n\r\n        // 更改页码后触发\r\n        function handleCurrentChange(val) {\r\n            server.page = val\r\n            getServerList()\r\n        }\r\n\r\n        // 调用子组件\r\n        const clickAddServer = () => {\r\n            addServerDialog.value.addServerDialog()\r\n        }\r\n\r\n        // 调用子组件\r\n        const clickDelete = (serverId)=> {\r\n            deleteServerDialog.value.deleteServerDialog(serverId)\r\n        }\r\n\r\n        // 调用子组件\r\n        const clickUpdateServer = (val)=> {\r\n            updateServerDialog.value.updateServerDialog(val)\r\n        }\r\n\r\n        return { \r\n            ...toRefs(server), \r\n            clickDelete, \r\n            clickUpdateServer, \r\n            clickAddServer,\r\n            getServerList,\r\n            handleSizeChange,\r\n            handleCurrentChange,\r\n            addServerDialog,\r\n            updateServerDialog,\r\n            deleteServerDialog\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"mappings":"AAuEA,SAAQA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,GAAG,QAAO,KAAI;AACvE,OAAOC,eAAc,MAAO,mCAAkC;AAC9D,OAAOC,kBAAiB,MAAO,sCAAqC;AACpE,OAAOC,kBAAiB,MAAO,sCAAqC;AACpE,OAAOC,EAAC,MAAO,IAAG;AAElB,eAAe;EACXC,UAAU,EAAE;IACRJ,eAAe;IACfC,kBAAkB;IAClBC;EACJ,CAAC;EACDG,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIX,QAAQ,CAAC;MACpBY,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE,EAAE;MACbC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE;IACX,CAAC;IAED,MAAMV,eAAc,GAAID,GAAG,CAAC;IAC5B,MAAME,kBAAiB,GAAIF,GAAG,CAAC;IAC/B,MAAMG,kBAAiB,GAAIH,GAAG,CAAC;IAC/BF,SAAS,CAAC,MAAI;MACVc,aAAa,CAAC;IAClB,CAAC;IAED,MAAM;MAACC;IAAK,IAAId,kBAAkB,CAAC;;IAEnC;IACA,MAAMa,aAAY,GAAI,MAAAA,CAAA,KAAU;MAC5B,MAAME,KAAI,GAAIV,EAAE,CAACW,SAAS,CAAC;QACvBL,IAAI,EAAEH,MAAM,CAACG,IAAI;QACjBM,IAAI,EAAET,MAAM,CAACE;MACjB,CAAC;MACD,IAAI;QACA,MAAMQ,IAAG,GAAI,MAAM,IAAIJ,KAAK,CAACK,QAAQ,CAACL,KAAK,CAACM,KAAK,CAACC,CAAC,CAAC,CAAC,CAACC,UAAS,GAAI,GAAE,GAAIP,KAAK,CAAC,CAACQ,OAAO,CAAC;QAExF,IAAIL,IAAI,CAACM,IAAI,CAACC,IAAG,KAAM,GAAE,EAAI;UACzB,IAAIX,KAAK,CAACY,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,CAACC,MAAM,CAAC;QACnD;QACAnB,MAAM,CAACC,UAAS,GAAIS,IAAI,CAACM,IAAI,CAACA,IAAG;QACjChB,MAAM,CAACI,KAAI,GAAIM,IAAI,CAACM,IAAI,CAACZ,KAAI;QAC7BJ,MAAM,CAACG,IAAG,GAAIO,IAAI,CAACM,IAAI,CAACb,IAAG;MAE/B,EAAE,OAAOiB,CAAC,EAAE;QAER,IAAId,KAAK,CAACY,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC,CAACC,MAAM,CAAC;MACnD;IAEJ;;IAGA;IACA,SAASE,gBAAgBA,CAACC,GAAG,EAAE;MAC3BtB,MAAM,CAACE,SAAQ,GAAIoB,GAAE;MACrBjB,aAAa,CAAC;IAClB;;IAEA;IACA,SAASkB,mBAAmBA,CAACD,GAAG,EAAE;MAC9BtB,MAAM,CAACG,IAAG,GAAImB,GAAE;MAChBjB,aAAa,CAAC;IAClB;;IAEA;IACA,MAAMmB,cAAa,GAAIA,CAAA,KAAM;MACzB9B,eAAe,CAAC+B,KAAK,CAAC/B,eAAe,CAAC;IAC1C;;IAEA;IACA,MAAMgC,WAAU,GAAKC,QAAQ,IAAI;MAC7B/B,kBAAkB,CAAC6B,KAAK,CAAC7B,kBAAkB,CAAC+B,QAAQ;IACxD;;IAEA;IACA,MAAMC,iBAAgB,GAAKN,GAAG,IAAI;MAC9B3B,kBAAkB,CAAC8B,KAAK,CAAC9B,kBAAkB,CAAC2B,GAAG;IACnD;IAEA,OAAO;MACH,GAAGhC,MAAM,CAACU,MAAM,CAAC;MACjB0B,WAAW;MACXE,iBAAiB;MACjBJ,cAAc;MACdnB,aAAa;MACbgB,gBAAgB;MAChBE,mBAAmB;MACnB7B,eAAe;MACfC,kBAAkB;MAClBC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}