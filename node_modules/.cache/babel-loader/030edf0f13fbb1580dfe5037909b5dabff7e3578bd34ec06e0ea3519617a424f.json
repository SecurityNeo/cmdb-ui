{"ast":null,"code":"import { reactive, toRefs, getCurrentInstance, ref } from 'vue';\nimport qs from 'qs';\nexport default {\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    const config = reactive({\n      centerDialogVisible: false,\n      isLoading: false\n    });\n    const selectUserId = ref();\n    const selectTagId = ref();\n    const selectHostId = ref();\n    const vm = reactive({\n      mgt_ip: \"\",\n      mgt_root_pwd: \"\",\n      storage_ip: \"\",\n      owner_id: null,\n      host_name: \"\",\n      tag_id: null,\n      host_id: null,\n      description: \"\"\n    });\n    const user = reactive({\n      user_arr: []\n    });\n    const tag = reactive({\n      tag_arr: []\n    });\n    const host = reactive({\n      host_arr: []\n    });\n\n    // 查询用户列表\n    const getUserList = async () => {\n      const query = qs.stringify({\n        page: 1,\n        size: 1000\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取用户列表失败\", \"warning\").notify();\n        }\n        user.user_arr = rest.data.data;\n      } catch (e) {\n        if (e.code !== 401) {\n          new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify();\n        }\n      }\n    };\n\n    // 查询资源标签列表\n    const getTagList = async () => {\n      const query = qs.stringify({\n        page: 1,\n        size: 1000\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().tagList + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取资源标签列表失败\", \"warning\").notify();\n        }\n        tag.tag_arr = rest.data.data;\n      } catch (e) {\n        if (e.code !== 401) {\n          new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify();\n        }\n      }\n    };\n\n    // 查询服务器列表\n    const getServerList = async () => {\n      const query = qs.stringify({\n        page: 1,\n        size: 2000\n      });\n      try {\n        const rest = await new proxy.$request(proxy.$urls.m().serverlist + \"?\" + query).modeget();\n        if (rest.data.code !== 200) {\n          new proxy.$tips(\"获取服务器列表失败\", \"warning\").notify();\n        }\n        host.host_arr = rest.data.data;\n      } catch (e) {\n        if (e.code !== 401) {\n          new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify();\n        }\n      }\n    };\n    const addVm = async () => {\n      const obj = {\n        mgt_ip: vm.mgt_ip,\n        mgt_root_pwd: vm.mgt_root_pwd,\n        storage_ip: vm.storage_ip,\n        owner_id: selectUserId.value,\n        host_name: vm.host_name,\n        tag_id: selectTagId.value,\n        host_id: selectHostId.value,\n        description: vm.description\n      };\n      config.isLoading = true;\n      const rest = await new proxy.$request(proxy.$urls.m().vmadd, obj).modepost();\n      if (rest.data.code !== 200) {\n        new proxy.$tips(\"新建虚拟机失败，稍后重试\", \"error\").notify();\n      }\n      config.isLoading = false;\n      config.centerDialogVisible = false;\n      proxy.$emit('flushPage');\n    };\n    const addVmDialog = () => {\n      getUserList(), getTagList(), getServerList();\n      config.centerDialogVisible = true;\n    };\n    return {\n      ...toRefs(vm),\n      config,\n      user,\n      tag,\n      host,\n      selectHostId,\n      selectUserId,\n      selectTagId,\n      addVm,\n      addVmDialog\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","getCurrentInstance","ref","qs","setup","proxy","config","centerDialogVisible","isLoading","selectUserId","selectTagId","selectHostId","vm","mgt_ip","mgt_root_pwd","storage_ip","owner_id","host_name","tag_id","host_id","description","user","user_arr","tag","tag_arr","host","host_arr","getUserList","query","stringify","page","size","rest","$request","$urls","m","userlist","modeget","data","code","$tips","notify","e","getTagList","tagList","getServerList","serverlist","addVm","obj","value","vmadd","modepost","$emit","addVmDialog"],"sources":["D:\\src\\github.com\\SecurityNeo\\cmdb-ui\\src\\page\\resource\\vm\\components\\addvm-dialog.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-dialog\r\n            v-model=\"config.centerDialogVisible\"\r\n            title=\"新建虚拟机\"\r\n            width=\"40%\"\r\n            align-center\r\n            :close-on-click-modal=\"false\"\r\n            \r\n        >\r\n\r\n            <div >\r\n                <div style=\"display: flex;\">\r\n                    <!-- 基础信息 -->\r\n                    <div style=\"width: 500px;\">\r\n                        <div class=\"input_block_title\">虚拟机基础信息</div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                主机名\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"host_name\" clearable class=\"inputflex\"  placeholder=\"请输入主机名\"  />\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                管理网IP地址\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"mgt_ip\" clearable class=\"inputflex\"  placeholder=\"请输管理网IP地址\"  />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                root用户密码\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"mgt_root_pwd\" clearable class=\"inputflex\"  type=\"password\" show-password placeholder=\"请输入root用户密码\"  />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"input-float \">\r\n                            <div class=\"input_key\">\r\n                                存储网IP地址\r\n                            </div>\r\n                            <div class=\"input_value\">\r\n                                <el-input v-model=\"storage_ip\" clearable class=\"inputflex\"  placeholder=\"请输存储网IP地址\"  />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div style=\"display: flex;\">\r\n                    <!-- 公共属性配置 -->\r\n                    <div>\r\n                        <div class=\"input_block_title\">公共属性</div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    责任人\r\n                                </div>\r\n                                <div>\r\n                                    <el-select v-model=\"selectUserId\" value-key=\"id\" placeholder=\"请选择责任人\">\r\n                                        <el-option\r\n                                            v-for=\"item in user.user_arr\"\r\n                                            :key=\"item.id\"\r\n                                            :label=\"item.name_alias\"\r\n                                            :value=\"item.id\"\r\n                                            >\r\n\r\n                                            <span style=\"float: left\">{{ item.username }}</span>\r\n                                            <span\r\n                                                style=\"float: right;color: var(--el-text-color-secondary);font-size: 13px;\"\r\n                                                >{{ item.name_alias }}</span>\r\n                                        </el-option>\r\n                                    </el-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    资源标签\r\n                                </div>\r\n                                <div>\r\n                                    <el-select v-model=\"selectTagId\" value-key=\"id\" placeholder=\"请选择资源标签\">\r\n                                        <el-option\r\n                                            v-for=\"item in tag.tag_arr\"\r\n                                            :key=\"item.id\"\r\n                                            :label=\"item.name\"\r\n                                            :value=\"item.id\"\r\n                                            />\r\n                                    </el-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    宿主机\r\n                                </div>\r\n                                <div>\r\n                                    <el-select v-model=\"selectHostId\" value-key=\"id\" placeholder=\"请选择虚拟机所在宿主机\">\r\n                                        <el-option\r\n                                            v-for=\"item in host.host_arr\"\r\n                                            :key=\"item.id\"\r\n                                            :label=\"item.host_name\"\r\n                                            :value=\"item.id\"\r\n                                            />\r\n                                    </el-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div class=\"input-float \">\r\n                                <div class=\"input_key\">\r\n                                    备注信息\r\n                                </div>\r\n                                <div class=\"input_value\">\r\n                                    <el-input v-model=\"description\" autosize type=\"textarea\" clearable class=\"inputflex\"  placeholder=\"请输服务器备注信息\"  />\r\n                                </div>\r\n                            </div>\r\n                        </div>       \r\n                    </div>\r\n                </div>\r\n\r\n                <!-- 表格下方功能按钮 -->\r\n                <div style=\"float: right; margin-bottom: 40px; margin-right: 72px;margin-top: 20px;\">\r\n                    <el-button @click=\"config.centerDialogVisible = false\">取消</el-button>\r\n                    <el-button type=\"primary\" :loading=\"config.isLoading\" @click=\"addVm\" >确认</el-button>\r\n                </div>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, toRefs, getCurrentInstance, ref } from 'vue'\r\nimport qs from 'qs'\r\n\r\nexport default ({\r\n    setup() {\r\n        const {proxy} = getCurrentInstance()\r\n\r\n        const config = reactive({\r\n            centerDialogVisible: false,\r\n            isLoading: false\r\n        })\r\n\r\n        const selectUserId = ref()\r\n        const selectTagId = ref()\r\n        const selectHostId = ref()\r\n        const vm = reactive({\r\n            mgt_ip: \"\",\r\n            mgt_root_pwd: \"\",\r\n            storage_ip: \"\",\r\n            owner_id: null,\r\n            host_name: \"\",\r\n            tag_id: null,\r\n            host_id: null,\r\n            description: \"\"\r\n        })\r\n\r\n        const user = reactive({\r\n            user_arr: []\r\n        })\r\n        const tag = reactive({\r\n            tag_arr: []\r\n        })\r\n        const host = reactive({\r\n            host_arr: []\r\n        })\r\n\r\n        // 查询用户列表\r\n        const getUserList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 1000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().userlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取用户列表失败\", \"warning\").notify()\r\n                }\r\n                user.user_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify() \r\n                }   \r\n            }\r\n        }\r\n        \r\n        // 查询资源标签列表\r\n        const getTagList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 1000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().tagList + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取资源标签列表失败\", \"warning\").notify()\r\n                }\r\n                tag.tag_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify()\r\n                }   \r\n            }\r\n        }\r\n\r\n                // 查询服务器列表\r\n        const getServerList = async()=> {\r\n            const query = qs.stringify({\r\n                page: 1,\r\n                size: 2000,\r\n            })\r\n            try {\r\n                const rest = await new proxy.$request(proxy.$urls.m().serverlist + \"?\" + query).modeget()\r\n                \r\n                if (rest.data.code !== 200 ) {\r\n                    new proxy.$tips(\"获取服务器列表失败\", \"warning\").notify()\r\n                }\r\n                host.host_arr = rest.data.data\r\n                \r\n            } catch (e) {\r\n                if (e.code !== 401) {\r\n                    new proxy.$tips(\"服务器错误，请稍后重试\", \"error\").notify()\r\n                }     \r\n            }\r\n\r\n        }\r\n\r\n        const addVm  = async() => {\r\n            const obj = {\r\n                mgt_ip: vm.mgt_ip,\r\n                mgt_root_pwd: vm.mgt_root_pwd,\r\n                storage_ip: vm.storage_ip,\r\n                owner_id: selectUserId.value,\r\n                host_name: vm.host_name,\r\n                tag_id: selectTagId.value,\r\n                host_id: selectHostId.value,\r\n                description: vm.description,\r\n            }\r\n\r\n            config.isLoading = true\r\n            const rest = await new proxy.$request(proxy.$urls.m().vmadd, obj).modepost()\r\n            if (rest.data.code !== 200) {\r\n                new proxy.$tips(\"新建虚拟机失败，稍后重试\", \"error\").notify()\r\n            }\r\n            config.isLoading = false\r\n            config.centerDialogVisible = false\r\n            proxy.$emit('flushPage')\r\n\r\n        }\r\n\r\n        const addVmDialog = () => {\r\n            getUserList(),\r\n            getTagList(),\r\n            getServerList()\r\n            config.centerDialogVisible = true\r\n        }\r\n\r\n        return {\r\n            ...toRefs(vm),\r\n            config,\r\n            user,\r\n            tag,\r\n            host,\r\n            selectHostId,\r\n            selectUserId,\r\n            selectTagId,\r\n            addVm,\r\n            addVmDialog\r\n        }\r\n    }\r\n    \r\n})\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}